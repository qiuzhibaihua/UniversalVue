{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/user.js","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/user.js","mtime":1584947584997},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login, logout } from '@/api/login';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nvar user = {\n  state: {\n    token: '',\n    name: '',\n    avatar: '',\n    roles: []\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_NAME: function SET_NAME(state, name) {\n      state.name = name;\n    },\n    SET_AVATAR: function SET_AVATAR(state, avatar) {\n      state.avatar = avatar;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref, userInfo) {\n      var commit = _ref.commit;\n      var username = userInfo.username.trim();\n      return new Promise(function (resolve, reject) {\n        login(username, userInfo.password, userInfo.uuid, userInfo.captcha, userInfo.marketno).then(function (response) {\n          var data = response.data;\n\n          if (!data.code) {\n            setToken(data.token);\n          } // if (data.code === 500) {\n          //   reject(data.msg)\n          // }\n          // commit('SET_TOKEN', data.token)\n\n\n          resolve(data);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 设置token\n    setTokenVuex: function setTokenVuex(_ref2) {\n      var commit = _ref2.commit;\n      commit('SET_TOKEN', getToken());\n    },\n    // 获取用户信息\n    // GetInfo({ commit, state }) {\n    //   return new Promise((resolve, reject) => {\n    //     getInfo(state.token).then(response => {\n    //       const data = response.data\n    //       if (data.roles && data.roles.length > 0) { // 验证返回的roles是否是一个非空数组\n    //         commit('SET_ROLES', data.roles)\n    //       } else {\n    //         reject('getInfo: roles must be a non-null array !')\n    //       }\n    //       commit('SET_NAME', data.name)\n    //       commit('SET_AVATAR', data.avatar)\n    //       resolve(response)\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n    // 登出\n    LogOut: function LogOut(_ref3) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('SET_TOKEN', '');\n          commit('SET_CONTROL', []);\n          removeToken();\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut: function FedLogOut(_ref4) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve) {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    }\n  }\n};\nexport default user;",{"version":3,"sources":["/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/user.js"],"names":["login","logout","getToken","setToken","removeToken","user","state","token","name","avatar","roles","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","actions","Login","userInfo","commit","username","trim","Promise","resolve","reject","password","uuid","captcha","marketno","then","response","data","code","catch","error","setTokenVuex","LogOut","FedLogOut"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,aAA9B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,cAAhD;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,KAAK,EAAE;AAJF,GADI;AAQXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,mBAACN,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITM,IAAAA,QAAQ,EAAE,kBAACP,KAAD,EAAQE,IAAR,EAAiB;AACzBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD,KANQ;AAOTM,IAAAA,UAAU,EAAE,oBAACR,KAAD,EAAQG,MAAR,EAAmB;AAC7BH,MAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACD,KATQ;AAUTM,IAAAA,SAAS,EAAE,mBAACT,KAAD,EAAQI,KAAR,EAAkB;AAC3BJ,MAAAA,KAAK,CAACI,KAAN,GAAcA,KAAd;AACD;AAZQ,GARA;AAuBXM,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,KAFO,uBAEWC,QAFX,EAEqB;AAAA,UAApBC,MAAoB,QAApBA,MAAoB;AAC1B,UAAMC,QAAQ,GAAGF,QAAQ,CAACE,QAAT,CAAkBC,IAAlB,EAAjB;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCxB,QAAAA,KAAK,CAACoB,QAAD,EAAWF,QAAQ,CAACO,QAApB,EAA8BP,QAAQ,CAACQ,IAAvC,EAA6CR,QAAQ,CAACS,OAAtD,EAA+DT,QAAQ,CAACU,QAAxE,CAAL,CAAuFC,IAAvF,CAA4F,UAAAC,QAAQ,EAAI;AACtG,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,cAAI,CAACA,IAAI,CAACC,IAAV,EAAgB;AACd7B,YAAAA,QAAQ,CAAC4B,IAAI,CAACxB,KAAN,CAAR;AACD,WAJqG,CAKtG;AACA;AACA;AACA;;;AACAgB,UAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,SAVD,EAUGE,KAVH,CAUS,UAAAC,KAAK,EAAI;AAChBV,UAAAA,MAAM,CAACU,KAAD,CAAN;AACD,SAZD;AAaD,OAdM,CAAP;AAeD,KAnBM;AAqBP;AACAC,IAAAA,YAtBO,+BAsBkB;AAAA,UAAVhB,MAAU,SAAVA,MAAU;AACvBA,MAAAA,MAAM,CAAC,WAAD,EAAcjB,QAAQ,EAAtB,CAAN;AACD,KAxBM;AAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAkC,IAAAA,MA7CO,yBA6CmB;AAAA,UAAjBjB,MAAiB,SAAjBA,MAAiB;AAAA,UAATb,KAAS,SAATA,KAAS;AACxB,aAAO,IAAIgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,QAAAA,MAAM,CAACK,KAAK,CAACC,KAAP,CAAN,CAAoBsB,IAApB,CAAyB,YAAM;AAC7BV,UAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAA,UAAAA,MAAM,CAAC,aAAD,EAAgB,EAAhB,CAAN;AACAf,UAAAA,WAAW;AACXmB,UAAAA,OAAO;AACR,SALD,EAKGU,KALH,CAKS,UAAAC,KAAK,EAAI;AAChBV,UAAAA,MAAM,CAACU,KAAD,CAAN;AACD,SAPD;AAQD,OATM,CAAP;AAUD,KAxDM;AA0DP;AACAG,IAAAA,SA3DO,4BA2De;AAAA,UAAVlB,MAAU,SAAVA,MAAU;AACpB,aAAO,IAAIG,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BJ,QAAAA,MAAM,CAAC,WAAD,EAAc,EAAd,CAAN;AACAf,QAAAA,WAAW;AACXmB,QAAAA,OAAO;AACR,OAJM,CAAP;AAKD;AAjEM;AAvBE,CAAb;AA4FA,eAAelB,IAAf","sourcesContent":["import { login, logout } from '@/api/login'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst user = {\n  state: {\n    token: '',\n    name: '',\n    avatar: '',\n    roles: []\n  },\n\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token\n    },\n    SET_NAME: (state, name) => {\n      state.name = name\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles\n    }\n  },\n\n  actions: {\n    // 登录\n    Login({ commit }, userInfo) {\n      const username = userInfo.username.trim()\n      return new Promise((resolve, reject) => {\n        login(username, userInfo.password, userInfo.uuid, userInfo.captcha, userInfo.marketno).then(response => {\n          const data = response.data\n          if (!data.code) {\n            setToken(data.token)\n          }\n          // if (data.code === 500) {\n          //   reject(data.msg)\n          // }\n          // commit('SET_TOKEN', data.token)\n          resolve(data)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 设置token\n    setTokenVuex({ commit }) {\n      commit('SET_TOKEN', getToken())\n    },\n    // 获取用户信息\n    // GetInfo({ commit, state }) {\n    //   return new Promise((resolve, reject) => {\n    //     getInfo(state.token).then(response => {\n    //       const data = response.data\n    //       if (data.roles && data.roles.length > 0) { // 验证返回的roles是否是一个非空数组\n    //         commit('SET_ROLES', data.roles)\n    //       } else {\n    //         reject('getInfo: roles must be a non-null array !')\n    //       }\n    //       commit('SET_NAME', data.name)\n    //       commit('SET_AVATAR', data.avatar)\n    //       resolve(response)\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n\n    // 登出\n    LogOut({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '')\n          commit('SET_CONTROL', [])\n          removeToken()\n          resolve()\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 前端 登出\n    FedLogOut({ commit }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '')\n        removeToken()\n        resolve()\n      })\n    }\n  }\n}\n\nexport default user\n"]}]}