{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/permission.js","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/permission.js","mtime":1584947584997},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport { menuNav } from '@/api/nav';\nimport { asyncRouterMap, constantRouterMap } from '@/router';\nimport Layout from '@/views/layout/Layout';\n/**\n * 通过meta.role判断是否与当前用户权限匹配\n * @param roles\n * @param route\n */\n// function hasPermission(roles, route) {\n//   if (route.meta && route.meta.roles) {\n//     return roles.some(role => route.meta.roles.indexOf(role) >= 0)\n//   } else {\n//     return true\n//   }\n// }\n\n/**\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\n * @param asyncRouterMap\n * @param roles\n */\n// function filterAsyncRouter(asyncRouterMap, roles) {\n//   const accessedRouters = asyncRouterMap.filter(route => {\n//     if (hasPermission(roles, route)) {\n//       if (route.children && route.children.length) {\n//         route.children = filterAsyncRouter(route.children, roles)\n//       }\n//       return true\n//     }\n//     return false\n//   })\n//   return accessedRouters\n// }\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: [],\n    permissions: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, routers) {\n      state.addRouters = routers;\n      state.routers = constantRouterMap.concat(routers);\n    },\n    SET_PERMISSIONS: function SET_PERMISSIONS(state, permissions) {\n      state.permissions = permissions;\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        menuNav().then(function (_ref2) {\n          var data = _ref2.data;\n\n          if (!data.code) {\n            var vData = data.menuList;\n            var newDatas = vData.map(function (v) {\n              var newRouters = {\n                path: '',\n                component: Layout,\n                name: v.url,\n                meta: {\n                  title: v.name,\n                  icon: v.icon\n                },\n                children: v.list === null ? [] : v.list.map(function (res) {\n                  return {\n                    path: \"\".concat(res.url),\n                    name: res.url,\n                    component: function component() {\n                      return import(\"@/views/\".concat(res.url));\n                    },\n                    meta: {\n                      title: res.name\n                    }\n                  };\n                })\n              };\n              return newRouters;\n            });\n            var accessedRouters = [].concat(_toConsumableArray(asyncRouterMap), _toConsumableArray(newDatas));\n            commit('SET_ROUTERS', accessedRouters);\n            commit('SET_PERMISSIONS', data.permissions);\n          }\n\n          resolve(data.code);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  }\n};\nexport default permission; // {\n//   path: '/example',\n//   component: Layout,\n//   redirect: '/example/table',\n//   name: 'Example',\n//   meta: { title: 'Example', icon: 'example' },\n//   children: [\n//     {\n//       path: 'table',\n//       name: 'Table',\n//       component: () => import('@/views/table/index'),\n//       meta: { title: 'Table', icon: 'table' }\n//     },\n//     {\n//       path: 'tree',\n//       name: 'Tree',\n//       component: () => import('@/views/tree/index'),\n//       meta: { title: 'Tree', icon: 'tree' }\n//     }\n//   ]\n// },\n// {\n//   path: '/icon',\n//   component: Layout,\n//   children: [{\n//     path: 'index',\n//     component: () => import('@/views/svg-icons/index'),\n//     name: 'icons',\n//     meta: { title: 'icons', icon: 'icon', noCache: true }\n//   }]\n// }",{"version":3,"sources":["/Users/robert/project/vue/UniversalVue/UniversalVue/src/store/modules/permission.js"],"names":["menuNav","asyncRouterMap","constantRouterMap","Layout","permission","state","routers","addRouters","permissions","mutations","SET_ROUTERS","concat","SET_PERMISSIONS","actions","GenerateRoutes","commit","Promise","resolve","reject","then","data","code","vData","menuList","newDatas","map","v","newRouters","path","component","name","url","meta","title","icon","children","list","res","accessedRouters","catch","error"],"mappings":"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","sourcesContent":["import { menuNav } from '@/api/nav'\nimport { asyncRouterMap, constantRouterMap } from '@/router'\nimport Layout from '@/views/layout/Layout'\n\n/**\n * 通过meta.role判断是否与当前用户权限匹配\n * @param roles\n * @param route\n */\n// function hasPermission(roles, route) {\n//   if (route.meta && route.meta.roles) {\n//     return roles.some(role => route.meta.roles.indexOf(role) >= 0)\n//   } else {\n//     return true\n//   }\n// }\n\n/**\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\n * @param asyncRouterMap\n * @param roles\n */\n// function filterAsyncRouter(asyncRouterMap, roles) {\n//   const accessedRouters = asyncRouterMap.filter(route => {\n//     if (hasPermission(roles, route)) {\n//       if (route.children && route.children.length) {\n//         route.children = filterAsyncRouter(route.children, roles)\n//       }\n//       return true\n//     }\n//     return false\n//   })\n//   return accessedRouters\n// }\n\nconst permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: [],\n    permissions: []\n  },\n  mutations: {\n    SET_ROUTERS: (state, routers) => {\n      state.addRouters = routers\n      state.routers = constantRouterMap.concat(routers)\n    },\n    SET_PERMISSIONS: (state, permissions) => {\n      state.permissions = permissions\n    }\n  },\n  actions: {\n    GenerateRoutes({ commit }) {\n      return new Promise((resolve, reject) => {\n        menuNav().then(({ data }) => {\n          if (!data.code) {\n            const vData = data.menuList\n            const newDatas = vData.map(v => {\n              const newRouters = {\n                path: '',\n                component: Layout,\n                name: v.url,\n                meta: {\n                  title: v.name, icon: v.icon\n                },\n                children: v.list === null ? [] : v.list.map(res => {\n                  return {\n                    path: `${res.url}`,\n                    name: res.url,\n                    component: () => import(`@/views/${res.url}`),\n                    meta: { title: res.name }\n                  }\n                })\n              }\n              return newRouters\n            })\n            const accessedRouters = [...asyncRouterMap, ...newDatas]\n            commit('SET_ROUTERS', accessedRouters)\n            commit('SET_PERMISSIONS', data.permissions)\n          }\n          resolve(data.code)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    }\n  }\n}\n\nexport default permission\n\n// {\n//   path: '/example',\n//   component: Layout,\n//   redirect: '/example/table',\n//   name: 'Example',\n//   meta: { title: 'Example', icon: 'example' },\n//   children: [\n//     {\n//       path: 'table',\n//       name: 'Table',\n//       component: () => import('@/views/table/index'),\n//       meta: { title: 'Table', icon: 'table' }\n//     },\n//     {\n//       path: 'tree',\n//       name: 'Tree',\n//       component: () => import('@/views/tree/index'),\n//       meta: { title: 'Tree', icon: 'tree' }\n//     }\n//   ]\n// },\n// {\n//   path: '/icon',\n//   component: Layout,\n//   children: [{\n//     path: 'index',\n//     component: () => import('@/views/svg-icons/index'),\n//     name: 'icons',\n//     meta: { title: 'icons', icon: 'icon', noCache: true }\n//   }]\n// }\n"]}]}