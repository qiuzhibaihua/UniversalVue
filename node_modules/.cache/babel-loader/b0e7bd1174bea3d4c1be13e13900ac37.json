{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/role/components/role-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/role/components/role-add-or-update.vue","mtime":1584947585010},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { treeDataTranslate } from \"@/utils\";\nimport { menuList, roleDataFormSubmit, roleInfo } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\";\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      visible: false,\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      },\n      dataForm: {\n        id: 0,\n        roleName: \"\",\n        remark: \"\"\n      },\n      dataRule: {\n        roleName: [{\n          required: true,\n          message: \"角色名称不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  components: {\n    SidesLip: SidesLip\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n        var _this = this;\n\n        var _ref, data, _ref2, _data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataForm.id = id || 0;\n                _context.next = 3;\n                return menuList();\n\n              case 3:\n                _ref = _context.sent;\n                data = _ref.data;\n                this.menuList = treeDataTranslate(data, \"menuId\");\n                this.$refs.SidesLip.init(this.dataForm.id ? \"修改\" : \"新增\", \"700px\", \"block\");\n                _context.next = 9;\n                return this.$nextTick(function () {\n                  _this.$refs[\"dataForm\"].resetFields();\n\n                  _this.$refs.menuListTree.setCheckedKeys([]);\n                });\n\n              case 9:\n                if (!this.dataForm.id) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 12;\n                return roleInfo(\"/sys/role/info/\".concat(this.dataForm.id));\n\n              case 12:\n                _ref2 = _context.sent;\n                _data = _ref2.data;\n\n                if (_data && _data.code === 0) {\n                  this.dataForm.roleName = _data.role.roleName;\n                  this.dataForm.remark = _data.role.remark;\n                  this.$refs.menuListTree.setCheckedKeys(_data.role.menuIdList);\n                }\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    sideClose: function sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n\n      this.$refs[\"dataForm\"].validate( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n          var params, _ref4, data;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!valid) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  params = {\n                    roleId: _this2.dataForm.id || undefined,\n                    roleName: _this2.dataForm.roleName,\n                    remark: _this2.dataForm.remark,\n                    menuIdList: [].concat(_this2.$refs.menuListTree.getCheckedKeys(), _this2.$refs.menuListTree.getHalfCheckedKeys())\n                  };\n                  _context2.next = 4;\n                  return roleDataFormSubmit(\"/sys/role/\".concat(!_this2.dataForm.id ? \"save\" : \"update\"), params);\n\n                case 4:\n                  _ref4 = _context2.sent;\n                  data = _ref4.data;\n\n                  if (data && data.code === 0) {\n                    _this2.$message({\n                      message: \"操作成功\",\n                      type: \"success\",\n                      duration: 1500,\n                      onClose: function onClose() {\n                        _this2.sideClose();\n\n                        _this2.$emit(\"refreshDataList\");\n                      }\n                    });\n                  } else {\n                    _this2.$message.error(data.msg);\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["role-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <sides-lip ref=\"SidesLip\">\n        <div slot=\"soltForm\">\n      <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\" size=\"small\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"dataForm.roleName\" placeholder=\"角色名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"dataForm.remark\" placeholder=\"备注\"></el-input>\n        </el-form-item>\n        <el-form-item size=\"mini\" label=\"授权\">\n          <el-tree\n            :data=\"menuList\"\n            :props=\"menuListTreeProps\"\n            node-key=\"menuId\"\n            ref=\"menuListTree\"\n            :default-expand-all=\"true\"\n            show-checkbox>\n          </el-tree>\n        </el-form-item>\n      </el-form>\n      </div>\n      <div slot=\"soltFooter\">\n        <el-button @click=\"sideClose\" size=\"small\">取消</el-button>\n        <el-button type=\"primary\" :loading=\"loading\" @click=\"dataFormSubmit()\" size=\"small\">确定</el-button>\n      </div>\n    </sides-lip>\n</template>\n\n<script>\nimport { treeDataTranslate } from \"@/utils\";\nimport { menuList, roleDataFormSubmit, roleInfo } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\";\nexport default {\n  data() {\n    return {\n      loading: false,\n      visible: false,\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      },\n      dataForm: {\n        id: 0,\n        roleName: \"\",\n        remark: \"\"\n      },\n      dataRule: {\n        roleName: [\n          { required: true, message: \"角色名称不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  components: {\n    SidesLip\n  },\n  methods: {\n    async init(id) {\n      this.dataForm.id = id || 0;\n      const { data } = await menuList();\n      this.menuList = treeDataTranslate(data, \"menuId\");\n      this.$refs.SidesLip.init(this.dataForm.id?\"修改\":\"新增\", \"700px\", \"block\");\n      await this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n        this.$refs.menuListTree.setCheckedKeys([]);\n      });\n      if (this.dataForm.id) {\n        const { data } = await roleInfo(`/sys/role/info/${this.dataForm.id}`);\n        if (data && data.code === 0) {\n          this.dataForm.roleName = data.role.roleName;\n          this.dataForm.remark = data.role.remark;\n          this.$refs.menuListTree.setCheckedKeys(data.role.menuIdList);\n        }\n      }\n    },\n    sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          const params = {\n            roleId: this.dataForm.id || undefined,\n            roleName: this.dataForm.roleName,\n            remark: this.dataForm.remark,\n            menuIdList: [].concat(\n              this.$refs.menuListTree.getCheckedKeys(),\n              this.$refs.menuListTree.getHalfCheckedKeys()\n            )\n          };\n          const { data } = await roleDataFormSubmit(\n            `/sys/role/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.sideClose();\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n        }\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/sys/role/components"}]}