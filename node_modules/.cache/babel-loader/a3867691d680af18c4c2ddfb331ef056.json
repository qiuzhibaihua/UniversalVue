{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/job/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/job/index.vue","mtime":1584947585006},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddOrUpdate from \"./components/schedule-add-or-update\";\nimport Log from \"./components/schedule-log\";\nimport { jobList, jobDelete, jobPause, jobResume, jobRun } from \"@/api/sys\";\nexport default {\n  data: function data() {\n    return {\n      dataForm: {\n        beanName: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: false,\n      logVisible: false\n    };\n  },\n  components: {\n    AddOrUpdate: AddOrUpdate,\n    Log: Log\n  },\n  mounted: function mounted() {\n    this.getDataList();\n  },\n  methods: {\n    // 查询清空\n    reset: function reset(dataForm) {\n      // this.$refs[dataForm].resetFields();\n      this.dataForm.beanName = \"\";\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage: function restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 获取数据列表\n    getDataList: function () {\n      var _getDataList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params, _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataListLoading = true;\n                params = {\n                  page: this.pageIndex,\n                  limit: this.pageSize,\n                  beanName: this.dataForm.beanName\n                };\n                _context.next = 4;\n                return jobList(params);\n\n              case 4:\n                _ref = _context.sent;\n                data = _ref.data;\n\n                if (data && data.code === 0) {\n                  this.dataList = data.page.list;\n                  this.totalPage = data.page.totalCount;\n                } else {\n                  this.dataList = [];\n                  this.totalPage = 0;\n                }\n\n                this.dataListLoading = false; // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/schedule/list\"),\n                //   method: \"get\",\n                //   params: this.$http.adornParams({\n                //     page: this.pageIndex,\n                //     limit: this.pageSize,\n                //     beanName: this.dataForm.beanName\n                //   })\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.dataList = data.page.list;\n                //     this.totalPage = data.page.totalCount;\n                //   } else {\n                //     this.dataList = [];\n                //     this.totalPage = 0;\n                //   }\n                //   this.dataListLoading = false;\n                // });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDataList() {\n        return _getDataList.apply(this, arguments);\n      }\n\n      return getDataList;\n    }(),\n    // 每页数\n    sizeChangeHandle: function sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle: function currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle: function selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle: function addOrUpdateHandle(id) {\n      var _this = this;\n\n      this.addOrUpdateVisible = true;\n      this.$nextTick(function () {\n        _this.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle: function deleteHandle(id) {\n      var _this2 = this;\n\n      var ids = id ? [id] : this.dataListSelections.map(function (item) {\n        return item.jobId;\n      });\n      this.$confirm(\"\\u786E\\u5B9A\\u8FDB\\u884C[\".concat(id ? \"删除\" : \"批量删除\", \"]\\u64CD\\u4F5C?\"), \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _ref3, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return jobDelete(ids);\n\n              case 2:\n                _ref3 = _context2.sent;\n                data = _ref3.data;\n\n                if (data && data.code === 0) {\n                  _this2.$message({\n                    message: \"操作成功\",\n                    type: \"success\",\n                    duration: 1500,\n                    onClose: function onClose() {\n                      _this2.getDataList();\n                    }\n                  });\n                } else {\n                  _this2.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/schedule/delete\"),\n                //   method: \"post\",\n                //   data: this.$http.adornData(ids, false)\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$message({\n                //       message: \"操作成功\",\n                //       type: \"success\",\n                //       duration: 1500,\n                //       onClose: () => {\n                //         this.getDataList();\n                //       }\n                //     });\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))).catch(function () {});\n    },\n    // 暂停\n    pauseHandle: function pauseHandle(id) {\n      var _this3 = this;\n\n      var ids = id ? [id] : this.dataListSelections.map(function (item) {\n        return item.jobId;\n      });\n      this.$confirm(\"\\u786E\\u5B9A\\u5BF9[id=\".concat(ids.join(\",\"), \"]\\u8FDB\\u884C[\").concat(id ? \"暂停\" : \"批量暂停\", \"]\\u64CD\\u4F5C?\"), \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _ref5, data;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return jobPause(ids);\n\n              case 2:\n                _ref5 = _context3.sent;\n                data = _ref5.data;\n\n                if (data && data.code === 0) {\n                  _this3.$message({\n                    message: \"操作成功\",\n                    type: \"success\",\n                    duration: 1500,\n                    onClose: function onClose() {\n                      _this3.getDataList();\n                    }\n                  });\n                } else {\n                  _this3.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/schedule/pause\"),\n                //   method: \"post\",\n                //   data: this.$http.adornData(ids, false)\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$message({\n                //       message: \"操作成功\",\n                //       type: \"success\",\n                //       duration: 1500,\n                //       onClose: () => {\n                //         this.getDataList();\n                //       }\n                //     });\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))).catch(function () {});\n    },\n    // 恢复\n    resumeHandle: function resumeHandle(id) {\n      var _this4 = this;\n\n      var ids = id ? [id] : this.dataListSelections.map(function (item) {\n        return item.jobId;\n      });\n      this.$confirm(\"\\u786E\\u5B9A\\u5BF9[id=\".concat(ids.join(\",\"), \"]\\u8FDB\\u884C[\").concat(id ? \"恢复\" : \"批量恢复\", \"]\\u64CD\\u4F5C?\"), \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _ref7, data;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return jobResume(ids);\n\n              case 2:\n                _ref7 = _context4.sent;\n                data = _ref7.data;\n\n                if (data && data.code === 0) {\n                  _this4.$message({\n                    message: \"操作成功\",\n                    type: \"success\",\n                    duration: 1500,\n                    onClose: function onClose() {\n                      _this4.getDataList();\n                    }\n                  });\n                } else {\n                  _this4.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/schedule/resume\"),\n                //   method: \"post\",\n                //   data: this.$http.adornData(ids, false)\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$message({\n                //       message: \"操作成功\",\n                //       type: \"success\",\n                //       duration: 1500,\n                //       onClose: () => {\n                //         this.getDataList();\n                //       }\n                //     });\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))).catch(function () {});\n    },\n    // 立即执行\n    runHandle: function runHandle(id) {\n      var _this5 = this;\n\n      var ids = id ? [id] : this.dataListSelections.map(function (item) {\n        return item.jobId;\n      });\n      this.$confirm(\"\\u786E\\u5B9A\\u5BF9[id=\".concat(ids.join(\",\"), \"]\\u8FDB\\u884C[\").concat(id ? \"立即执行\" : \"批量立即执行\", \"]\\u64CD\\u4F5C?\"), \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _ref9, data;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return jobRun(ids);\n\n              case 2:\n                _ref9 = _context5.sent;\n                data = _ref9.data;\n\n                if (data && data.code === 0) {\n                  _this5.$message({\n                    message: \"操作成功\",\n                    type: \"success\",\n                    duration: 1500,\n                    onClose: function onClose() {\n                      _this5.getDataList();\n                    }\n                  });\n                } else {\n                  _this5.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/schedule/run\"),\n                //   method: \"post\",\n                //   data: this.$http.adornData(ids, false)\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$message({\n                //       message: \"操作成功\",\n                //       type: \"success\",\n                //       duration: 1500,\n                //       onClose: () => {\n                //         this.getDataList();\n                //       }\n                //     });\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))).catch(function () {});\n    },\n    // 日志列表\n    logHandle: function logHandle() {\n      var _this6 = this;\n\n      this.logVisible = true;\n      this.$nextTick(function () {\n        _this6.$refs.log.init();\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\" size=\"small\">\n      <el-form-item>\n        <el-input v-model=\"dataForm.beanName\" placeholder=\"bean名称\" clearable></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"restPage()\">查询</el-button>\n        <el-button @click=\"reset('dataForm')\">清空</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:save')\" type=\"primary\" @click=\"addOrUpdateHandle()\">新增</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:delete')\" type=\"danger\" @click=\"deleteHandle()\" :disabled=\"dataListSelections.length <= 0\">批量删除</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:pause')\" type=\"danger\" @click=\"pauseHandle()\" :disabled=\"dataListSelections.length <= 0\">批量暂停</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:resume')\" type=\"danger\" @click=\"resumeHandle()\" :disabled=\"dataListSelections.length <= 0\">批量恢复</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:run')\" type=\"danger\" @click=\"runHandle()\" :disabled=\"dataListSelections.length <= 0\">批量立即执行</el-button>\n        <el-button v-if=\"isAuth('sys:schedule:log')\" type=\"success\" @click=\"logHandle()\" size=\"small\">日志列表</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table\n      :data=\"dataList\"\n      border\n      v-loading=\"dataListLoading\"\n      @selection-change=\"selectionChangeHandle\"\n      style=\"width: 100%;\">\n      <el-table-column\n        type=\"selection\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"50\">\n      </el-table-column>\n      <el-table-column\n        prop=\"jobId\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"80\"\n        label=\"ID\">\n      </el-table-column>\n      <el-table-column\n        prop=\"beanName\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"bean名称\">\n      </el-table-column>\n      <el-table-column\n        prop=\"methodName\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"方法名称\">\n      </el-table-column>\n      <el-table-column\n        prop=\"params\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"参数\">\n      </el-table-column>\n      <el-table-column\n        prop=\"cronExpression\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"cron表达式\">\n      </el-table-column>\n      <el-table-column\n        prop=\"remark\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"备注\">\n      </el-table-column>\n      <el-table-column\n        prop=\"status\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"状态\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.status === 0\" size=\"small\">正常</el-tag>\n          <el-tag v-else size=\"small\" type=\"danger\">暂停</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        fixed=\"right\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"150\"\n        label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button v-if=\"isAuth('sys:schedule:update')\" type=\"text\" size=\"small\" @click=\"addOrUpdateHandle(scope.row.jobId)\">修改</el-button>\n          <el-button v-if=\"isAuth('sys:schedule:delete')\" type=\"text\" size=\"small\" @click=\"deleteHandle(scope.row.jobId)\">删除</el-button>\n          <el-button v-if=\"isAuth('sys:schedule:pause')\" type=\"text\" size=\"small\" @click=\"pauseHandle(scope.row.jobId)\">暂停</el-button>\n          <el-button v-if=\"isAuth('sys:schedule:resume')\" type=\"text\" size=\"small\" @click=\"resumeHandle(scope.row.jobId)\">恢复</el-button>\n          <el-button v-if=\"isAuth('sys:schedule:run')\" type=\"text\" size=\"small\" @click=\"runHandle(scope.row.jobId)\">立即执行</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      @current-change=\"currentChangeHandle\"\n      :current-page=\"pageIndex\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"pageSize\"\n      :total=\"totalPage\"\n      layout=\"total, sizes, prev, pager, next, jumper\">\n    </el-pagination>\n    <!-- 弹窗, 新增 / 修改 -->\n    <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"getDataList\"></add-or-update>\n    <!-- 弹窗, 日志列表 -->\n    <log v-if=\"logVisible\" ref=\"log\"></log>\n  </div>\n</template>\n\n<script>\nimport AddOrUpdate from \"./components/schedule-add-or-update\";\nimport Log from \"./components/schedule-log\";\nimport { jobList, jobDelete, jobPause, jobResume, jobRun } from \"@/api/sys\";\nexport default {\n  data() {\n    return {\n      dataForm: {\n        beanName: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: false,\n      logVisible: false\n    };\n  },\n  components: {\n    AddOrUpdate,\n    Log\n  },\n  mounted() {\n    this.getDataList();\n  },\n  methods: {\n    // 查询清空\n    reset(dataForm) {\n      // this.$refs[dataForm].resetFields();\n      this.dataForm.beanName=\"\";\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 获取数据列表\n    async getDataList() {\n      this.dataListLoading = true;\n      const params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        beanName: this.dataForm.beanName\n      };\n      const { data } = await jobList(params);\n      if (data && data.code === 0) {\n        this.dataList = data.page.list;\n        this.totalPage = data.page.totalCount;\n      } else {\n        this.dataList = [];\n        this.totalPage = 0;\n      }\n      this.dataListLoading = false;\n\n      // this.$http({\n      //   url: this.$http.adornUrl(\"/sys/schedule/list\"),\n      //   method: \"get\",\n      //   params: this.$http.adornParams({\n      //     page: this.pageIndex,\n      //     limit: this.pageSize,\n      //     beanName: this.dataForm.beanName\n      //   })\n      // }).then(({ data }) => {\n      //   if (data && data.code === 0) {\n      //     this.dataList = data.page.list;\n      //     this.totalPage = data.page.totalCount;\n      //   } else {\n      //     this.dataList = [];\n      //     this.totalPage = 0;\n      //   }\n      //   this.dataListLoading = false;\n      // });\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.addOrUpdateVisible = true;\n      this.$nextTick(() => {\n        this.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.jobId;\n          });\n      this.$confirm(\n        `确定进行[${id ? \"删除\" : \"批量删除\"}]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await jobDelete(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n\n          // this.$http({\n          //   url: this.$http.adornUrl(\"/sys/schedule/delete\"),\n          //   method: \"post\",\n          //   data: this.$http.adornData(ids, false)\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.getDataList();\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        })\n        .catch(() => {});\n    },\n    // 暂停\n    pauseHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.jobId;\n          });\n      this.$confirm(\n        `确定对[id=${ids.join(\",\")}]进行[${id ? \"暂停\" : \"批量暂停\"}]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await jobPause(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n\n          // this.$http({\n          //   url: this.$http.adornUrl(\"/sys/schedule/pause\"),\n          //   method: \"post\",\n          //   data: this.$http.adornData(ids, false)\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.getDataList();\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        })\n        .catch(() => {});\n    },\n    // 恢复\n    resumeHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.jobId;\n          });\n      this.$confirm(\n        `确定对[id=${ids.join(\",\")}]进行[${id ? \"恢复\" : \"批量恢复\"}]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await jobResume(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n\n          // this.$http({\n          //   url: this.$http.adornUrl(\"/sys/schedule/resume\"),\n          //   method: \"post\",\n          //   data: this.$http.adornData(ids, false)\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.getDataList();\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        })\n        .catch(() => {});\n    },\n    // 立即执行\n    runHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.jobId;\n          });\n      this.$confirm(\n        `确定对[id=${ids.join(\",\")}]进行[${\n          id ? \"立即执行\" : \"批量立即执行\"\n        }]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await jobRun(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n          // this.$http({\n          //   url: this.$http.adornUrl(\"/sys/schedule/run\"),\n          //   method: \"post\",\n          //   data: this.$http.adornData(ids, false)\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.getDataList();\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        })\n        .catch(() => {});\n    },\n    // 日志列表\n    logHandle() {\n      this.logVisible = true;\n      this.$nextTick(() => {\n        this.$refs.log.init();\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/sys/job"}]}