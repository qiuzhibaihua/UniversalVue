{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/components/ScrollPane/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/components/ScrollPane/index.vue","mtime":1584947584987},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nvar padding = 15; // tag's padding\n\nexport default {\n  name: 'scrollPane',\n  data: function data() {\n    return {\n      left: 0\n    };\n  },\n  methods: {\n    handleScroll: function handleScroll(e) {\n      var eventDelta = e.wheelDelta || -e.deltaY * 3;\n      var $container = this.$refs.scrollContainer;\n      var $containerWidth = $container.offsetWidth;\n      var $wrapper = this.$refs.scrollWrapper;\n      var $wrapperWidth = $wrapper.offsetWidth;\n\n      if (eventDelta > 0) {\n        this.left = Math.min(0, this.left + eventDelta);\n      } else {\n        if ($containerWidth - padding < $wrapperWidth) {\n          if (this.left < -($wrapperWidth - $containerWidth + padding)) {\n            this.left = this.left;\n          } else {\n            this.left = Math.max(this.left + eventDelta, $containerWidth - $wrapperWidth - padding);\n          }\n        } else {\n          this.left = 0;\n        }\n      }\n    },\n    moveToTarget: function moveToTarget($target) {\n      var $container = this.$refs.scrollContainer;\n      var $containerWidth = $container.offsetWidth;\n      var $targetLeft = $target.offsetLeft;\n      var $targetWidth = $target.offsetWidth;\n\n      if ($targetLeft < -this.left) {\n        // tag in the left\n        this.left = -$targetLeft + padding;\n      } else if ($targetLeft + padding > -this.left && $targetLeft + $targetWidth < -this.left + $containerWidth - padding) {// tag in the current view\n        // eslint-disable-line\n      } else {\n        // tag in the right\n        this.left = -($targetLeft - ($containerWidth - $targetWidth) + padding);\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;AASA,IAAA,OAAA,GAAA,EAAA,C,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,UAAA,UAAA,GAAA,CAAA,CAAA,UAAA,IAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,eAAA;AACA,UAAA,eAAA,GAAA,UAAA,CAAA,WAAA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,aAAA;AACA,UAAA,aAAA,GAAA,QAAA,CAAA,WAAA;;AAEA,UAAA,UAAA,GAAA,CAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,IAAA,GAAA,UAAA,CAAA;AACA,OAFA,MAEA;AACA,YAAA,eAAA,GAAA,OAAA,GAAA,aAAA,EAAA;AACA,cAAA,KAAA,IAAA,GAAA,EAAA,aAAA,GAAA,eAAA,GAAA,OAAA,CAAA,EAAA;AACA,iBAAA,IAAA,GAAA,KAAA,IAAA;AACA,WAFA,MAEA;AACA,iBAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,IAAA,GAAA,UAAA,EAAA,eAAA,GAAA,aAAA,GAAA,OAAA,CAAA;AACA;AACA,SANA,MAMA;AACA,eAAA,IAAA,GAAA,CAAA;AACA;AACA;AACA,KArBA;AAsBA,IAAA,YAtBA,wBAsBA,OAtBA,EAsBA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,eAAA;AACA,UAAA,eAAA,GAAA,UAAA,CAAA,WAAA;AACA,UAAA,WAAA,GAAA,OAAA,CAAA,UAAA;AACA,UAAA,YAAA,GAAA,OAAA,CAAA,WAAA;;AAEA,UAAA,WAAA,GAAA,CAAA,KAAA,IAAA,EAAA;AACA;AACA,aAAA,IAAA,GAAA,CAAA,WAAA,GAAA,OAAA;AACA,OAHA,MAGA,IAAA,WAAA,GAAA,OAAA,GAAA,CAAA,KAAA,IAAA,IAAA,WAAA,GAAA,YAAA,GAAA,CAAA,KAAA,IAAA,GAAA,eAAA,GAAA,OAAA,EAAA,CACA;AACA;AACA,OAHA,MAGA;AACA;AACA,aAAA,IAAA,GAAA,EAAA,WAAA,IAAA,eAAA,GAAA,YAAA,CAAA,GAAA,OAAA,CAAA;AACA;AACA;AAtCA;AAPA,CAAA","sourcesContent":["<template>\n  <div class=\"scroll-container\" ref=\"scrollContainer\" @wheel.prevent=\"handleScroll\">\n    <div class=\"scroll-wrapper\" ref=\"scrollWrapper\" :style=\"{left: left + 'px'}\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nconst padding = 15 // tag's padding\n\nexport default {\n  name: 'scrollPane',\n  data() {\n    return {\n      left: 0\n    }\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 3\n      const $container = this.$refs.scrollContainer\n      const $containerWidth = $container.offsetWidth\n      const $wrapper = this.$refs.scrollWrapper\n      const $wrapperWidth = $wrapper.offsetWidth\n\n      if (eventDelta > 0) {\n        this.left = Math.min(0, this.left + eventDelta)\n      } else {\n        if ($containerWidth - padding < $wrapperWidth) {\n          if (this.left < -($wrapperWidth - $containerWidth + padding)) {\n            this.left = this.left\n          } else {\n            this.left = Math.max(this.left + eventDelta, $containerWidth - $wrapperWidth - padding)\n          }\n        } else {\n          this.left = 0\n        }\n      }\n    },\n    moveToTarget($target) {\n      const $container = this.$refs.scrollContainer\n      const $containerWidth = $container.offsetWidth\n      const $targetLeft = $target.offsetLeft\n      const $targetWidth = $target.offsetWidth\n\n      if ($targetLeft < -this.left) {\n        // tag in the left\n        this.left = -$targetLeft + padding\n      } else if ($targetLeft + padding > -this.left && $targetLeft + $targetWidth < -this.left + $containerWidth - padding) {\n        // tag in the current view\n        // eslint-disable-line\n      } else {\n        // tag in the right\n        this.left = -($targetLeft - ($containerWidth - $targetWidth) + padding)\n      }\n    }\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.scroll-container {\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  .scroll-wrapper {\n    position: absolute;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/ScrollPane"}]}