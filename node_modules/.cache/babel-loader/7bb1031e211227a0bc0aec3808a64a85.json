{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/menu/components/menu-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/menu/components/menu-add-or-update.vue","mtime":1584947585007},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { treeDataTranslate } from \"@/utils\";\nimport Icon from \"@/icons\";\nimport { menuSelect, menuDataFormSubmit, menuInfo } from \"@/api/sys\";\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validateUrl = function validateUrl(rule, value, callback) {\n      if (_this.dataForm.type === 1 && !/\\S/.test(value)) {\n        callback(new Error(\"菜单URL不能为空\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      visible: false,\n      dataForm: {\n        id: 0,\n        type: 1,\n        typeList: [\"目录\", \"菜单\", \"按钮\"],\n        name: \"\",\n        parentId: 0,\n        parentName: \"\",\n        url: \"\",\n        perms: \"\",\n        orderNum: 0,\n        icon: \"\",\n        iconList: []\n      },\n      dataRule: {\n        name: [{\n          required: true,\n          message: \"名称不能为空\",\n          trigger: \"blur\"\n        }],\n        parentName: [{\n          required: true,\n          message: \"上级菜单不能为空\",\n          trigger: \"change\"\n        }],\n        url: [{\n          validator: validateUrl,\n          trigger: \"blur\"\n        }]\n      },\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      }\n    };\n  },\n  created: function created() {\n    this.iconList = Icon.getNameList();\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n        var _this2 = this;\n\n        var _ref, data, _ref2, _data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataForm.id = id || 0;\n                _context.next = 3;\n                return menuSelect();\n\n              case 3:\n                _ref = _context.sent;\n                data = _ref.data;\n                this.menuList = treeDataTranslate(data.menuList, \"menuId\");\n                this.visible = true;\n                _context.next = 9;\n                return this.$nextTick(function () {\n                  _this2.$refs[\"dataForm\"].resetFields();\n                });\n\n              case 9:\n                if (this.dataForm.id) {\n                  _context.next = 13;\n                  break;\n                }\n\n                // 新增\n                this.menuListTreeSetCurrentNode();\n                _context.next = 26;\n                break;\n\n              case 13:\n                _context.next = 15;\n                return menuInfo(\"/sys/menu/info/\".concat(this.dataForm.id));\n\n              case 15:\n                _ref2 = _context.sent;\n                _data = _ref2.data;\n                this.dataForm.id = _data.menu.menuId;\n                this.dataForm.type = _data.menu.type;\n                this.dataForm.name = _data.menu.name;\n                this.dataForm.parentId = _data.menu.parentId;\n                this.dataForm.url = _data.menu.url;\n                this.dataForm.perms = _data.menu.perms;\n                this.dataForm.orderNum = _data.menu.orderNum;\n                this.dataForm.icon = _data.menu.icon;\n                this.menuListTreeSetCurrentNode();\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    // 菜单树选中\n    menuListTreeCurrentChangeHandle: function menuListTreeCurrentChangeHandle(data, node) {\n      this.dataForm.parentId = data.menuId;\n      this.dataForm.parentName = data.name;\n    },\n    // 菜单树设置当前选中节点\n    menuListTreeSetCurrentNode: function menuListTreeSetCurrentNode() {\n      this.$refs.menuListTree.setCurrentKey(this.dataForm.parentId);\n      this.dataForm.parentName = (this.$refs.menuListTree.getCurrentNode() || {})[\"name\"];\n    },\n    // 图标选中\n    iconActiveHandle: function iconActiveHandle(iconName) {\n      this.dataForm.icon = iconName;\n    },\n    // 表单提交\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"dataForm\"].validate( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n          var params, _ref4, data;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!valid) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  params = {\n                    menuId: _this3.dataForm.id || undefined,\n                    type: _this3.dataForm.type,\n                    name: _this3.dataForm.name,\n                    parentId: _this3.dataForm.parentId,\n                    url: _this3.dataForm.url,\n                    perms: _this3.dataForm.perms,\n                    orderNum: _this3.dataForm.orderNum,\n                    icon: _this3.dataForm.icon\n                  };\n                  _context2.next = 4;\n                  return menuDataFormSubmit(\"/sys/menu/\".concat(!_this3.dataForm.id ? \"save\" : \"update\"), params);\n\n                case 4:\n                  _ref4 = _context2.sent;\n                  data = _ref4.data;\n\n                  if (data && data.code === 0) {\n                    _this3.$message({\n                      message: \"操作成功\",\n                      type: \"success\",\n                      duration: 1500,\n                      onClose: function onClose() {\n                        _this3.visible = false;\n\n                        _this3.$emit(\"refreshDataList\");\n                      }\n                    });\n                  } else {\n                    _this3.$message.error(data.msg);\n                  } // this.$http({\n                  //   url: this.$http.adornUrl(\n                  //     `/sys/menu/${!this.dataForm.id ? \"save\" : \"update\"}`\n                  //   ),\n                  //   method: \"post\",\n                  //   data: this.$http.adornData({\n                  //     menuId: this.dataForm.id || undefined,\n                  //     type: this.dataForm.type,\n                  //     name: this.dataForm.name,\n                  //     parentId: this.dataForm.parentId,\n                  //     url: this.dataForm.url,\n                  //     perms: this.dataForm.perms,\n                  //     orderNum: this.dataForm.orderNum,\n                  //     icon: this.dataForm.icon\n                  //   })\n                  // }).then(({ data }) => {\n                  //   if (data && data.code === 0) {\n                  //     this.$message({\n                  //       message: \"操作成功\",\n                  //       type: \"success\",\n                  //       duration: 1500,\n                  //       onClose: () => {\n                  //         this.visible = false;\n                  //         this.$emit(\"refreshDataList\");\n                  //       }\n                  //     });\n                  //   } else {\n                  //     this.$message.error(data.msg);\n                  //   }\n                  // });\n\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["menu-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog\n    :title=\"!dataForm.id ? '新增' : '修改'\"\n    :close-on-click-modal=\"false\"\n    :visible.sync=\"visible\">\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\" size=\"small\">\n      <el-form-item label=\"类型\" prop=\"type\">\n        <el-radio-group v-model=\"dataForm.type\">\n          <el-radio v-for=\"(type, index) in dataForm.typeList\" :label=\"index\" :key=\"index\">{{ type }}</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item :label=\"dataForm.typeList[dataForm.type] + '名称'\" prop=\"name\">\n        <el-input v-model=\"dataForm.name\" :placeholder=\"dataForm.typeList[dataForm.type] + '名称'\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"上级菜单\" prop=\"parentName\">\n        <el-popover\n          ref=\"menuListPopover\"\n          placement=\"bottom-start\"\n          trigger=\"click\">\n          <el-tree\n            :data=\"menuList\"\n            :props=\"menuListTreeProps\"\n            node-key=\"menuId\"\n            ref=\"menuListTree\"\n            @current-change=\"menuListTreeCurrentChangeHandle\"\n            :default-expand-all=\"false\"\n            :highlight-current=\"true\"\n            :expand-on-click-node=\"false\">\n          </el-tree>\n        </el-popover>\n        <el-input v-model=\"dataForm.parentName\" v-popover:menuListPopover :readonly=\"true\" placeholder=\"点击选择上级菜单\" class=\"menu-list__input\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"dataForm.type !== 2\" label=\"菜单路由\" prop=\"url\">\n        <el-input v-model=\"dataForm.url\" placeholder=\"菜单路由\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"dataForm.type !== 0\" label=\"授权标识\" prop=\"perms\">\n        <el-input v-model=\"dataForm.perms\" placeholder=\"多个用逗号分隔, 如: user:list,user:create\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"排序号\" prop=\"orderNum\">\n        <el-input-number v-model=\"dataForm.orderNum\" controls-position=\"right\" :min=\"0\" label=\"排序号\"></el-input-number>\n      </el-form-item>\n      <el-form-item v-if=\"dataForm.type !== 2\" label=\"菜单图标\" prop=\"icon\">\n        <el-row>\n          <el-col :span=\"24\">\n            <el-popover\n              ref=\"iconListPopover\"\n              placement=\"bottom-start\"\n              trigger=\"click\"\n              popper-class=\"mod-menu__icon-popover\">\n              <div class=\"mod-menu__icon-list\">\n                <el-button\n                  v-for=\"(item, index) in iconList\"\n                  :key=\"index\"\n                  @click=\"iconActiveHandle(item)\"\n                  :class=\"{ 'is-active': item === dataForm.icon }\">\n                  <svg-icon :icon-class=\"item\"></svg-icon>\n                </el-button>\n              </div>\n            </el-popover>\n            <el-input v-model=\"dataForm.icon\" v-popover:iconListPopover :readonly=\"true\" placeholder=\"菜单图标名称\" class=\"icon-list__input\"></el-input>\n          </el-col>\n          <!-- <el-col :span=\"2\" class=\"icon-list__tips\">\n            <el-tooltip placement=\"top\" effect=\"light\">\n              <i class=\"el-icon-warning\"></i>\n            </el-tooltip>\n          </el-col> -->\n        </el-row>\n      </el-form-item>\n    </el-form>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"visible = false\">取消</el-button>\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\">确定</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { treeDataTranslate } from \"@/utils\";\nimport Icon from \"@/icons\";\nimport { menuSelect, menuDataFormSubmit, menuInfo } from \"@/api/sys\";\nexport default {\n  data() {\n    var validateUrl = (rule, value, callback) => {\n      if (this.dataForm.type === 1 && !/\\S/.test(value)) {\n        callback(new Error(\"菜单URL不能为空\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      visible: false,\n      dataForm: {\n        id: 0,\n        type: 1,\n        typeList: [\"目录\", \"菜单\", \"按钮\"],\n        name: \"\",\n        parentId: 0,\n        parentName: \"\",\n        url: \"\",\n        perms: \"\",\n        orderNum: 0,\n        icon: \"\",\n        iconList: []\n      },\n      dataRule: {\n        name: [\n          { required: true, message: \"名称不能为空\", trigger: \"blur\" }\n        ],\n        parentName: [\n          { required: true, message: \"上级菜单不能为空\", trigger: \"change\" }\n        ],\n        url: [{ validator: validateUrl, trigger: \"blur\" }]\n      },\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      }\n    };\n  },\n  created() {\n    this.iconList = Icon.getNameList();\n  },\n  methods: {\n    async init(id) {\n      this.dataForm.id = id || 0;\n      const { data } = await menuSelect();\n      this.menuList = treeDataTranslate(data.menuList, \"menuId\");\n      this.visible = true;\n      await this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n      });\n      if (!this.dataForm.id) {\n        // 新增\n        this.menuListTreeSetCurrentNode();\n      } else {\n        // 修改\n        const { data } = await menuInfo(`/sys/menu/info/${this.dataForm.id}`);\n        this.dataForm.id = data.menu.menuId;\n        this.dataForm.type = data.menu.type;\n        this.dataForm.name = data.menu.name;\n        this.dataForm.parentId = data.menu.parentId;\n        this.dataForm.url = data.menu.url;\n        this.dataForm.perms = data.menu.perms;\n        this.dataForm.orderNum = data.menu.orderNum;\n        this.dataForm.icon = data.menu.icon;\n        this.menuListTreeSetCurrentNode();\n      }\n    },\n    // 菜单树选中\n    menuListTreeCurrentChangeHandle(data, node) {\n      this.dataForm.parentId = data.menuId;\n      this.dataForm.parentName = data.name;\n    },\n    // 菜单树设置当前选中节点\n    menuListTreeSetCurrentNode() {\n      this.$refs.menuListTree.setCurrentKey(this.dataForm.parentId);\n      this.dataForm.parentName = (this.$refs.menuListTree.getCurrentNode() ||\n        {})[\"name\"];\n    },\n    // 图标选中\n    iconActiveHandle(iconName) {\n      this.dataForm.icon = iconName;\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          const params = {\n            menuId: this.dataForm.id || undefined,\n            type: this.dataForm.type,\n            name: this.dataForm.name,\n            parentId: this.dataForm.parentId,\n            url: this.dataForm.url,\n            perms: this.dataForm.perms,\n            orderNum: this.dataForm.orderNum,\n            icon: this.dataForm.icon\n          };\n          const { data } = await menuDataFormSubmit(\n            `/sys/menu/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.visible = false;\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n          // this.$http({\n          //   url: this.$http.adornUrl(\n          //     `/sys/menu/${!this.dataForm.id ? \"save\" : \"update\"}`\n          //   ),\n          //   method: \"post\",\n          //   data: this.$http.adornData({\n          //     menuId: this.dataForm.id || undefined,\n          //     type: this.dataForm.type,\n          //     name: this.dataForm.name,\n          //     parentId: this.dataForm.parentId,\n          //     url: this.dataForm.url,\n          //     perms: this.dataForm.perms,\n          //     orderNum: this.dataForm.orderNum,\n          //     icon: this.dataForm.icon\n          //   })\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.visible = false;\n          //         this.$emit(\"refreshDataList\");\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.mod-menu {\n  .menu-list__input,\n  .icon-list__input {\n    > .el-input__inner {\n      cursor: pointer;\n    }\n  }\n  &__icon-popover {\n    max-width: 370px;\n  }\n  &__icon-list {\n    max-height: 240px;\n    padding: 0;\n    margin: -8px 0 0 -8px;\n    > .el-button {\n      padding: 8px;\n      margin: 8px 0 0 8px;\n      > span {\n        display: inline-block;\n        vertical-align: middle;\n        width: 18px;\n        height: 18px;\n        font-size: 18px;\n      }\n    }\n  }\n  .icon-list__tips {\n    font-size: 18px;\n    text-align: center;\n    color: #e6a23c;\n    cursor: pointer;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/sys/menu/components"}]}