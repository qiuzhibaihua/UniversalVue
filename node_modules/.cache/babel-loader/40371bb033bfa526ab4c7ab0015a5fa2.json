{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/login/index.vue","mtime":1585101559171},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isvalidUsername, guid } from \"@/utils/validate\";\nimport { Message } from \"element-ui\";\nexport default {\n  name: \"login\",\n  data: function data() {\n    // const validateUsername = (rule, value, callback) => {\n    //   if (value) {//isvalidUsername\n    //     callback(new Error(\"请输入正确的用户名\"));\n    //   } else {\n    //     callback();\n    //   }\n    // };\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 4) {\n        callback(new Error(\"密码不能少于4位数\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        uuid: \"\",\n        captcha: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入用户名\"\n        } //validator: validateUsername\n        ],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          validator: validatePassword\n        }],\n        captcha: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入验证码\"\n        }]\n      },\n      passwordType: \"password\",\n      loading: false,\n      showDialog: false,\n      imgUrl: \"\"\n    };\n  },\n  created: function created() {\n    this.loginForm.uuid = guid();\n    this.imgUrl = process.env.VUE_APP_BASE_API + \"captcha.jpg?uuid=\".concat(this.loginForm.uuid);\n  },\n  methods: {\n    showPwd: function showPwd() {\n      if (this.passwordType === \"password\") {\n        this.passwordType = \"text\";\n      } else {\n        this.passwordType = \"password\";\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this.loading = true;\n\n          _this.$store.dispatch(\"Login\", _this.loginForm).then(function (res) {\n            if (!res.code) {\n              _this.$router.push({\n                path: \"/\"\n              });\n            } else {\n              Message.error(res.msg);\n            }\n\n            _this.loading = false;\n\n            _this.vCode();\n          }).catch(function (err) {\n            Message.error(err);\n            _this.loading = false;\n          });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // 点击更新验证码\n    vCode: function vCode() {\n      var uuid = guid();\n      this.loginForm.uuid = uuid;\n      this.imgUrl = process.env.VUE_APP_BASE_API + \"captcha.jpg?uuid=\".concat(uuid);\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login-container\">\n        <div class=\"login-form-layout\">\n            <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\" auto-complete=\"on\"\n                     label-position=\"left\">\n                <div class=\"title-container\">\n                    <h3 class=\"title\">\n                        网关治理平台\n                    </h3>\n                    <!--<lang-select class=\"set-language\"/>-->\n                </div>\n\n                <el-form-item prop=\"username\">\n                    <span class=\"svg-container\">\n                      <svg-icon icon-class=\"user\"/>\n                    </span>\n                    <el-input\n                            v-model=\"loginForm.username\"\n                            placeholder=\"请输入用户名\"\n                            name=\"username\"\n                            type=\"text\"\n                            auto-complete=\"on\"\n                    />\n                </el-form-item>\n\n                <el-form-item prop=\"password\">\n                    <span class=\"svg-container\">\n                      <svg-icon icon-class=\"password\"/>\n                    </span>\n                    <el-input\n                            v-model=\"loginForm.password\"\n                            :type=\"passwordType\"\n                            placeholder=\"请输入密码\"\n                            name=\"password\"\n                            auto-complete=\"on\"\n                            @keyup.enter.native=\"handleLogin\"\n                    />\n                    <span class=\"show-pwd\" @click=\"showPwd\">\n          <svg-icon :icon-class=\"passwordType === 'password' ? 'eye' : 'eye-open'\"/>\n        </span>\n                </el-form-item>\n\n                <el-form-item prop=\"captcha\">\n        <span class=\"svg-container\">\n          <span class=\"el-icon-picture\"/>\n        </span>\n                    <el-input\n                            name=\"captcha\"\n                            type=\"text\"\n                            @keyup.enter.native=\"handleLogin\"\n                            v-model=\"loginForm.captcha\"\n                            autocomplete=\"on\"\n                            placeholder=\"请输入验证码\"\n                    />\n                    <img :src=\"imgUrl\" @click=\"vCode\" class=\"vcode\">\n                </el-form-item>\n                <el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;margin-bottom:30px;\"\n                           @click.native.prevent=\"handleLogin\">\n                    登录\n                </el-button>\n\n            </el-form>\n        </div>\n        <!--<particles></particles>-->\n    </div>\n</template>\n<script>\n    import { isvalidUsername, guid } from \"@/utils/validate\";\n    import { Message } from \"element-ui\";\n\n    export default {\n        name: \"login\",\n        data() {\n            // const validateUsername = (rule, value, callback) => {\n            //   if (value) {//isvalidUsername\n            //     callback(new Error(\"请输入正确的用户名\"));\n            //   } else {\n            //     callback();\n            //   }\n            // };\n            const validatePassword = (rule, value, callback) => {\n                if (value.length < 4) {\n                    callback(new Error(\"密码不能少于4位数\"));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                loginForm: {\n                    username: \"\",\n                    password: \"\",\n                    uuid: \"\",\n                    captcha: \"\"\n                },\n                loginRules: {\n                    username: [\n                        { required: true, trigger: \"blur\", message: \"请输入用户名\" } //validator: validateUsername\n                    ],\n                    password: [\n                        { required: true, trigger: \"blur\", validator: validatePassword }\n                    ],\n                    captcha: [{ required: true, trigger: \"blur\", message: \"请输入验证码\" }]\n                },\n                passwordType: \"password\",\n                loading: false,\n                showDialog: false,\n\n                imgUrl: \"\"\n            };\n        },\n        created() {\n            this.loginForm.uuid = guid();\n            this.imgUrl = process.env.VUE_APP_BASE_API+`captcha.jpg?uuid=${\n                this.loginForm.uuid\n                }`;\n        },\n        methods: {\n            showPwd() {\n                if (this.passwordType === \"password\") {\n                    this.passwordType = \"text\";\n                } else {\n                    this.passwordType = \"password\";\n                }\n            },\n            handleLogin() {\n                this.$refs.loginForm.validate(valid => {\n                    if (valid) {\n                        this.loading = true;\n                        this.$store\n                            .dispatch(\"Login\", this.loginForm)\n                            .then(res => {\n                                if (!res.code) {\n                                    this.$router.push({ path: \"/\" });\n                                } else {\n                                    Message.error(res.msg);\n                                }\n                                this.loading = false;\n                                this.vCode();\n                            })\n                            .catch(err => {\n                                Message.error(err);\n                                this.loading = false;\n                            });\n                    } else {\n                        console.log(\"error submit!!\");\n                        return false;\n                    }\n                });\n            },\n            // 点击更新验证码\n            vCode() {\n                const uuid = guid();\n                this.loginForm.uuid = uuid;\n                this.imgUrl = process.env.VUE_APP_BASE_API+ `captcha.jpg?uuid=${uuid}`;\n            }\n        }\n    };\n</script>\n<!--@supports (-webkit-mask: none) and (not (cater-color: $cursor)) {-->\n<!--.login-container .el-input input {-->\n<!--color: red;-->\n<!--&::first-line {-->\n<!--color: $light_gray;-->\n<!--}-->\n<!--}-->\n<!--}-->\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n    /* 修复input 背景不协调 和光标变色 */\n    /* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */\n\n    $bg: #283443;\n    $light_gray: #eee;\n    $cursor: #fff;\n\n\n\n    /* reset element-ui css */\n    .login-container {\n        // background: url('../../assets/bg.jpg') center center no-repeat;\n        background-size: cover;\n        .login-form-layout {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background: #FFF;\n            box-shadow: 0px 9px 18px rgba(9, 109, 146, 0.2);\n            border-radius: 10px;\n        }\n        .el-input {\n            display: inline-block;\n            height: 47px;\n            width: 85%;\n            input {\n                background: transparent;\n                border: 0px;\n                -webkit-appearance: none;\n                border-radius: 0px;\n                padding: 12px 5px 12px 15px;\n                color: #C8CACE!important;\n                height: 47px;\n                caret-color: $cursor;\n                &:-webkit-autofill {\n                    -webkit-box-shadow: 0 0 0px 1000px $bg inset !important;\n                    -webkit-text-fill-color: $cursor !important;\n                }\n            }\n        }\n        .el-form-item {\n            border: 1px solid rgba(84,198,172,1);\n            background: #FFF;\n            border-radius: 5px;\n            color: #454545;\n        }\n    }\n</style>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n    // $bg:#2d3a4b;\n    $bg: transparent;\n    $dark_gray: #889aa4;\n    $light_gray: #eee;\n    .login-container {\n        min-height: 100%;\n        width: 100%;\n        overflow: hidden;\n        .vcode {\n            position: absolute;\n            width: 100px;\n            top: 50%;\n            transform: translateY(-50%);\n            right: 10px;\n        }\n        .login-form {\n            position: relative;\n            width: 420px;\n            height: 494px;\n            max-width: 100%;\n            /*padding: 160px 35px 0;*/\n            margin: 0 auto;\n            overflow: hidden;\n            padding: 0 33px;\n            box-sizing: border-box;\n        }\n        .tips {\n            font-size: 14px;\n            color: #fff;\n            margin-bottom: 10px;\n            span {\n                &:first-of-type {\n                    margin-right: 16px;\n                }\n            }\n        }\n        .svg-container {\n            padding: 6px 5px 6px 15px;\n            color: $dark_gray;\n            vertical-align: middle;\n            width: 30px;\n            display: inline-block;\n        }\n        .title-container {\n            position: relative;\n            .title {\n                font-size: 31px;\n                color: #54C6AC;\n                margin: 44px auto 34px auto;\n                text-align: center;\n                font-weight: bold;\n            }\n            .set-language {\n                color: #fff;\n                position: absolute;\n                top: 3px;\n                font-size: 18px;\n                right: 0px;\n                cursor: pointer;\n            }\n        }\n        .show-pwd {\n            position: absolute;\n            right: 10px;\n            top: 7px;\n            font-size: 16px;\n            color: $dark_gray;\n            cursor: pointer;\n            user-select: none;\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/login"}]}