{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/components/user-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/components/user-add-or-update.vue","mtime":1584947585011},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.parse-int\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isEmail, isMobile } from \"@/utils/validate\";\nimport { getRoleList, userDataFormSubmit, userUpdate } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\"; // import \"@/styles/sideslip.scss\";\n\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (!_this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"密码不能为空\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateComfirmPassword = function validateComfirmPassword(rule, value, callback) {\n      if (!_this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"确认密码不能为空\"));\n      } else if (_this.dataForm.password !== value) {\n        callback(new Error(\"确认密码与密码输入不一致\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateEmail = function validateEmail(rule, value, callback) {\n      if (!isEmail(value)) {\n        callback(new Error(\"邮箱格式错误\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validateMobile = function validateMobile(rule, value, callback) {\n      if (!isMobile(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      visible: false,\n      roleList: [],\n      dataForm: {\n        id: 0,\n        userName: \"\",\n        password: \"\",\n        comfirmPassword: \"\",\n        salt: \"\",\n        email: \"\",\n        mobile: \"\",\n        roleIdList: [],\n        isFreeze: 1\n      },\n      dataRule: {\n        userName: [{\n          required: true,\n          message: \"用户名不能为空\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePassword,\n          trigger: \"blur\"\n        }],\n        comfirmPassword: [{\n          validator: validateComfirmPassword,\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"邮箱不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateEmail,\n          trigger: \"blur\"\n        }],\n        mobile: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        roleIdList: [{\n          required: true,\n          message: \"角色不能为空\",\n          trigger: \"change\"\n        }]\n      }\n    };\n  },\n  components: {\n    SidesLip: SidesLip\n  },\n  methods: {\n    init: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n        var _this2 = this;\n\n        var _ref, data, _ref2, _data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataForm.id = id || 0;\n                _context.next = 3;\n                return getRoleList();\n\n              case 3:\n                _ref = _context.sent;\n                data = _ref.data;\n\n                if (!(data && data.code === 0 && data.list && data.list.length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                this.roleList = data.list;\n                _context.next = 11;\n                break;\n\n              case 9:\n                this.$message.error(\"需先创立可用的角色\");\n                return _context.abrupt(\"return\", '');\n\n              case 11:\n                this.$refs.SidesLip.init(this.dataForm.id ? \"修改\" : \"新增\", \"700px\", \"block\");\n                this.$nextTick(function () {\n                  _this2.$refs[\"dataForm\"].resetFields();\n                });\n\n                if (!this.dataForm.id) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 16;\n                return userUpdate(\"/sys/user/info/\".concat(this.dataForm.id));\n\n              case 16:\n                _ref2 = _context.sent;\n                _data = _ref2.data;\n\n                if (_data && _data.code === 0) {\n                  this.dataForm.userName = _data.user.username;\n                  this.dataForm.salt = _data.user.salt;\n                  this.dataForm.email = _data.user.email;\n                  this.dataForm.mobile = _data.user.mobile;\n                  this.dataForm.roleIdList = _data.user.roleIdList;\n                  this.dataForm.isFreeze = Number.parseInt(_data.user.isFreeze);\n                }\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }(),\n    sideClose: function sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"dataForm\"].validate( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n          var params, _ref4, data;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!valid) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _this3.loading = true;\n                  params = {\n                    userId: _this3.dataForm.id || undefined,\n                    username: _this3.dataForm.userName,\n                    password: _this3.dataForm.password,\n                    salt: _this3.dataForm.salt,\n                    email: _this3.dataForm.email,\n                    mobile: _this3.dataForm.mobile,\n                    isFreeze: _this3.dataForm.isFreeze,\n                    roleIdList: _this3.dataForm.roleIdList\n                  };\n                  _context2.next = 5;\n                  return userDataFormSubmit(\"/sys/user/\".concat(!_this3.dataForm.id ? \"save\" : \"update\"), params);\n\n                case 5:\n                  _ref4 = _context2.sent;\n                  data = _ref4.data;\n\n                  if (data && data.code === 0) {\n                    _this3.$message({\n                      message: \"操作成功\",\n                      type: \"success\",\n                      duration: 1500,\n                      onClose: function onClose() {\n                        _this3.loading = false;\n\n                        _this3.sideClose();\n\n                        _this3.$emit(\"refreshDataList\");\n                      }\n                    });\n                  } else {\n                    _this3.$message.error(data.msg);\n\n                    _this3.loading = false;\n                  }\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["user-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <sides-lip ref=\"SidesLip\">\n    <div slot=\"soltForm\">\n      <el-form\n        :model=\"dataForm\"\n        :rules=\"dataRule\"\n        ref=\"dataForm\"\n        @keyup.enter.native=\"dataFormSubmit()\"\n        label-width=\"80px\"\n        size=\"small\"\n      >\n        <el-form-item label=\"用户名\" prop=\"userName\">\n          <el-input v-model=\"dataForm.userName\" placeholder=\"登录帐号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\" :class=\"{ 'is-required': !dataForm.id }\">\n          <el-input v-model=\"dataForm.password\" type=\"password\" placeholder=\"密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"comfirmPassword\" :class=\"{ 'is-required': !dataForm.id }\">\n          <el-input v-model=\"dataForm.comfirmPassword\" type=\"password\" placeholder=\"确认密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"dataForm.email\" placeholder=\"邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"mobile\">\n          <el-input v-model=\"dataForm.mobile\" placeholder=\"手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色\" size=\"mini\" prop=\"roleIdList\">\n          <el-checkbox-group v-model=\"dataForm.roleIdList\">\n            <el-checkbox\n              v-for=\"role in roleList\"\n              :key=\"role.roleId\"\n              :label=\"role.roleId\"\n            >{{ role.roleName }}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"状态\" size=\"mini\" prop=\"isFreeze\">\n          <el-radio-group v-model=\"dataForm.isFreeze\">\n            <el-radio :label=\"1\">禁用</el-radio>\n            <el-radio :label=\"0\">正常</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div slot=\"soltFooter\">\n      <el-button @click=\"sideClose\">取消</el-button>\n      <el-button type=\"primary\" :loading=\"loading\" @click=\"dataFormSubmit()\">确定</el-button>\n    </div>\n  </sides-lip>\n</template>\n\n<script>\nimport { isEmail, isMobile } from \"@/utils/validate\";\nimport { getRoleList, userDataFormSubmit, userUpdate } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\";\n// import \"@/styles/sideslip.scss\";\nexport default {\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"密码不能为空\"));\n      } else {\n        callback();\n      }\n    };\n    var validateComfirmPassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"确认密码不能为空\"));\n      } else if (this.dataForm.password !== value) {\n        callback(new Error(\"确认密码与密码输入不一致\"));\n      } else {\n        callback();\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (!isEmail(value)) {\n        callback(new Error(\"邮箱格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    var validateMobile = (rule, value, callback) => {\n      if (!isMobile(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      visible: false,\n      roleList: [],\n      dataForm: {\n        id: 0,\n        userName: \"\",\n        password: \"\",\n        comfirmPassword: \"\",\n        salt: \"\",\n        email: \"\",\n        mobile: \"\",\n        roleIdList: [],\n        isFreeze: 1\n      },\n      dataRule: {\n        userName: [\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" }\n        ],\n        password: [{ validator: validatePassword, trigger: \"blur\" }],\n        comfirmPassword: [\n          { validator: validateComfirmPassword, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"邮箱不能为空\", trigger: \"blur\" },\n          { validator: validateEmail, trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        roleIdList: [\n          { required: true, message: \"角色不能为空\", trigger: \"change\" }\n        ]\n      }\n    };\n  },\n  components: {\n    SidesLip\n  },\n  methods: {\n    async init(id) {\n      this.dataForm.id = id || 0;\n      const { data } = await getRoleList();\n      if(data && data.code === 0 && data.list && data.list.length >0){\n        this.roleList = data.list\n      }else{\n        this.$message.error(\"需先创立可用的角色\");\n        return '';\n      }\n      this.$refs.SidesLip.init(\n        this.dataForm.id ? \"修改\" : \"新增\",\n        \"700px\",\n        \"block\"\n      );\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n      });\n      if (this.dataForm.id) {\n        const { data } = await userUpdate(`/sys/user/info/${this.dataForm.id}`);\n        if (data && data.code === 0) {\n          this.dataForm.userName = data.user.username;\n          this.dataForm.salt = data.user.salt;\n          this.dataForm.email = data.user.email;\n          this.dataForm.mobile = data.user.mobile;\n          this.dataForm.roleIdList = data.user.roleIdList;\n          this.dataForm.isFreeze = Number.parseInt(data.user.isFreeze);\n        }\n      }\n    },\n    sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          const params = {\n            userId: this.dataForm.id || undefined,\n            username: this.dataForm.userName,\n            password: this.dataForm.password,\n            salt: this.dataForm.salt,\n            email: this.dataForm.email,\n            mobile: this.dataForm.mobile,\n            isFreeze: this.dataForm.isFreeze,\n            roleIdList: this.dataForm.roleIdList\n          };\n          const { data } = await userDataFormSubmit(\n            `/sys/user/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.loading = false;\n                this.sideClose();\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};\n</script>\n\n\n"],"sourceRoot":"src/views/sys/user/components"}]}