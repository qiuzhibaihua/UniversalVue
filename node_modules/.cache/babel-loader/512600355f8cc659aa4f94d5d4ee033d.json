{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/index.vue","mtime":1584947585012},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { userList, userDelete } from \"@/api/sys\";\nimport AddOrUpdate from \"./components/user-add-or-update\";\nexport default {\n  data: function data() {\n    return {\n      dataForm: {\n        loginname: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: true\n    };\n  },\n  components: {\n    AddOrUpdate: AddOrUpdate\n  },\n  // activated() {\n  //   this.getDataList();\n  // },\n  methods: {\n    // 查询清空 修改  by葛海军\n    reset: function reset(dataForm) {\n      this.$refs[dataForm].resetFields();\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage: function restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 获取数据列表 查询清空 修改  by葛海军\n    getDataList: function getDataList() {\n      var _this = this;\n\n      this.dataListLoading = true;\n      var params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        username: this.dataForm.userName,\n        userType: '0'\n      };\n      userList(params).then(function (_ref) {\n        var data = _ref.data;\n\n        if (data && data.code === 0) {\n          _this.dataList = data.page.list;\n          _this.totalPage = data.page.totalCount;\n        } else {\n          _this.dataList = [];\n          _this.totalPage = 0;\n        }\n\n        _this.dataListLoading = false;\n      });\n    },\n    // 每页数\n    sizeChangeHandle: function sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle: function currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle: function selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle: function addOrUpdateHandle(id) {\n      var _this2 = this;\n\n      this.addOrUpdateVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle: function deleteHandle(id) {\n      var _this3 = this;\n\n      var userIds = id ? [id] : this.dataListSelections.map(function (item) {\n        return item.userId;\n      });\n      this.$confirm(\"\\u786E\\u5B9A\\u8FDB\\u884C\".concat(id ? \"删除\" : \"批量删除\", \"\\u64CD\\u4F5C?\"), \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _ref3, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return userDelete(userIds);\n\n              case 2:\n                _ref3 = _context.sent;\n                data = _ref3.data;\n\n                if (data && data.code === 0) {\n                  _this3.$message({\n                    message: \"操作成功\",\n                    type: \"success\",\n                    duration: 1500,\n                    onClose: function onClose() {\n                      _this3.restPage();\n                    }\n                  });\n                } else {\n                  _this3.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/user/delete\"),\n                //   method: \"post\",\n                //   data: this.$http.adornData(userIds, false)\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$message({\n                //       message: \"操作成功\",\n                //       type: \"success\",\n                //       duration: 1500,\n                //       onClose: () => {\n                //         this.getDataList();\n                //       }\n                //     });\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))).catch(function () {});\n    }\n  },\n  mounted: function mounted() {\n    this.getDataList();\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template> \n  <div class=\"app-container\">\n    <el-form :inline=\"true\" :model=\"dataForm\" ref=\"dataForm\" @keyup.enter.native=\"restPage()\" size=\"small\">\n      <el-form-item prop=\"userName\">\n        <el-input v-model=\"dataForm.userName\" placeholder=\"用户名\" clearable></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"restPage()\">查询</el-button>\n        <el-button @click=\"reset('dataForm')\" >清空</el-button>\n        <el-button v-if=\"isAuth('sys:user:save')\" type=\"primary\" @click=\"addOrUpdateHandle()\">新增</el-button>\n        <el-button v-if=\"isAuth('sys:user:delete')\" type=\"danger\" @click=\"deleteHandle()\" :disabled=\"dataListSelections.length <= 0\">批量删除</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table\n      :data=\"dataList\"\n      border\n      v-loading=\"dataListLoading\"\n      tooltip-effect=\"dark\"\n      @selection-change=\"selectionChangeHandle\"\n      size=\"small\"\n      style=\"width: 100%;\">\n      <el-table-column\n        type=\"selection\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"50\">\n      </el-table-column>\n      <el-table-column\n        prop=\"username\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"用户名\">\n      </el-table-column>\n      <el-table-column\n        prop=\"email\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"邮箱\">\n      </el-table-column>\n      <el-table-column\n        prop=\"mobile\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"手机号\">\n      </el-table-column>\n      <el-table-column\n        prop=\"isFreeze\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"状态\">\n        <template slot-scope=\"scope\">\n          {{scope.row.isFreeze == '1'?\"禁用\":\"正常\"}}\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"createTime\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"180\"\n        label=\"创建时间\">\n      </el-table-column>\n      <el-table-column\n        fixed=\"right\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"150\"\n        label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button v-if=\"isAuth('sys:user:update')\" type=\"text\" size=\"small\" @click=\"addOrUpdateHandle(scope.row.userId)\">修改</el-button>\n          <el-button v-if=\"isAuth('sys:user:delete')\" type=\"text\" size=\"small\" @click=\"deleteHandle(scope.row.userId)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      @current-change=\"currentChangeHandle\"\n      :current-page=\"pageIndex\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"pageSize\"\n      :total=\"totalPage\"\n      layout=\"total, sizes, prev, pager, next, jumper\">\n    </el-pagination>\n    <!-- 弹窗, 新增 / 修改 -->\n    <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"restPage\"></add-or-update>\n  </div>\n</template>\n\n<script>\nimport { userList, userDelete } from \"@/api/sys\";\nimport AddOrUpdate from \"./components/user-add-or-update\";\n\nexport default {\n  data() {\n    return {\n      dataForm: {\n        loginname: \"\",\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: true\n    };\n  },\n  components: {\n    AddOrUpdate\n  },\n  // activated() {\n  //   this.getDataList();\n  // },\n  methods: {\n    // 查询清空 修改  by葛海军\n    reset(dataForm) {\n      this.$refs[dataForm].resetFields();\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n\n    // 获取数据列表 查询清空 修改  by葛海军\n    getDataList() {\n      this.dataListLoading = true;\n      var params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        username: this.dataForm.userName,\n         userType: '0'\n      };\n      userList(params).then(({ data }) => {\n        if (data && data.code === 0) {\n          this.dataList = data.page.list;\n          this.totalPage = data.page.totalCount;\n        } else {\n          this.dataList = [];\n          this.totalPage = 0;\n        }\n        this.dataListLoading = false;\n      });\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.addOrUpdateVisible = true;\n      this.$nextTick(() => {\n        this.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle(id) {\n      var userIds = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.userId;\n          });\n      this.$confirm(\n        `确定进行${id ? \"删除\" : \"批量删除\"}操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          // const params = {\n          //   userIds: userIds\n          // };\n          const { data } = await userDelete(userIds);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.restPage();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n          // this.$http({\n          //   url: this.$http.adornUrl(\"/sys/user/delete\"),\n          //   method: \"post\",\n          //   data: this.$http.adornData(userIds, false)\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.getDataList();\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        })\n        .catch(() => {});\n    }\n  },\n  mounted() {\n    this.getDataList();\n  }\n};\n</script>\n"],"sourceRoot":"src/views/sys/user"}]}