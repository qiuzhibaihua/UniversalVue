{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/job/components/schedule-log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/job/components/schedule-log.vue","mtime":1584947585006},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { jobLogList, jobLogInfo } from \"@/api/sys\";\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      dataForm: {\n        id: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false\n    };\n  },\n  methods: {\n    init: function init() {\n      this.visible = true;\n      this.getDataList();\n    },\n    // 获取数据列表\n    getDataList: function () {\n      var _getDataList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params, _ref, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dataListLoading = true;\n                params = {\n                  page: this.pageIndex,\n                  limit: this.pageSize,\n                  jobId: this.dataForm.id\n                };\n                _context.next = 4;\n                return jobLogList(params);\n\n              case 4:\n                _ref = _context.sent;\n                data = _ref.data;\n\n                if (data && data.code === 0) {\n                  this.dataList = data.page.list;\n                  this.totalPage = data.page.totalCount;\n                } else {\n                  this.dataList = [];\n                  this.totalPage = 0;\n                }\n\n                this.dataListLoading = false; // this.$http({\n                //   url: this.$http.adornUrl(\"/sys/scheduleLog/list\"),\n                //   method: \"get\",\n                //   params: this.$http.adornParams({\n                //     page: this.pageIndex,\n                //     limit: this.pageSize,\n                //     jobId: this.dataForm.id\n                //   })\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.dataList = data.page.list;\n                //     this.totalPage = data.page.totalCount;\n                //   } else {\n                //     this.dataList = [];\n                //     this.totalPage = 0;\n                //   }\n                //   this.dataListLoading = false;\n                // });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getDataList() {\n        return _getDataList.apply(this, arguments);\n      }\n\n      return getDataList;\n    }(),\n    // 每页数\n    sizeChangeHandle: function sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle: function currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 失败信息\n    showErrorInfo: function () {\n      var _showErrorInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var _ref2, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return jobLogInfo(\"/sys/scheduleLog/info/\".concat(id));\n\n              case 2:\n                _ref2 = _context2.sent;\n                data = _ref2.data;\n\n                if (data && data.code === 0) {\n                  this.$alert(data.log.error);\n                } else {\n                  this.$message.error(data.msg);\n                } // this.$http({\n                //   url: this.$http.adornUrl(`/sys/scheduleLog/info/${id}`),\n                //   method: \"get\",\n                //   params: this.$http.adornParams()\n                // }).then(({ data }) => {\n                //   if (data && data.code === 0) {\n                //     this.$alert(data.log.error);\n                //   } else {\n                //     this.$message.error(data.msg);\n                //   }\n                // });\n\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function showErrorInfo(_x) {\n        return _showErrorInfo.apply(this, arguments);\n      }\n\n      return showErrorInfo;\n    }()\n  }\n};",{"version":3,"sources":["schedule-log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA,SAAA,UAAA,EAAA,UAAA,QAAA,WAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,EAAA,EAAA;AADA,OAFA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,SAAA,EAAA,CANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,SAAA,EAAA,CARA;AASA,MAAA,eAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,WAAA;AACA,KAJA;AAKA;AACA,IAAA,WANA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOA,qBAAA,eAAA,GAAA,IAAA;AACA,gBAAA,MARA,GAQA;AACA,kBAAA,IAAA,EAAA,KAAA,SADA;AAEA,kBAAA,KAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,KAAA,EAAA,KAAA,QAAA,CAAA;AAHA,iBARA;AAAA;AAAA,uBAaA,UAAA,CAAA,MAAA,CAbA;;AAAA;AAAA;AAaA,gBAAA,IAbA,QAaA,IAbA;;AAcA,oBAAA,IAAA,IAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA,uBAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAAA,UAAA;AACA,iBAHA,MAGA;AACA,uBAAA,QAAA,GAAA,EAAA;AACA,uBAAA,SAAA,GAAA,CAAA;AACA;;AACA,qBAAA,eAAA,GAAA,KAAA,CArBA,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCA;AACA,IAAA,gBA1CA,4BA0CA,GA1CA,EA0CA;AACA,WAAA,QAAA,GAAA,GAAA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,WAAA;AACA,KA9CA;AA+CA;AACA,IAAA,mBAhDA,+BAgDA,GAhDA,EAgDA;AACA,WAAA,SAAA,GAAA,GAAA;AACA,WAAA,WAAA;AACA,KAnDA;AAoDA;AACA,IAAA,aArDA;AAAA,qGAqDA,EArDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsDA,UAAA,iCAAA,EAAA,EAtDA;;AAAA;AAAA;AAsDA,gBAAA,IAtDA,SAsDA,IAtDA;;AAuDA,oBAAA,IAAA,IAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,uBAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBAFA,MAEA;AACA,uBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA;AACA,iBA3DA,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAdA,CAAA","sourcesContent":["<template>\n  <el-dialog\n    title=\"日志列表\"\n    :close-on-click-modal=\"false\"\n    :visible.sync=\"visible\"\n    width=\"75%\">\n    <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\" size=\"small\">\n      <el-form-item>\n        <el-input v-model=\"dataForm.id\" placeholder=\"任务ID\" clearable></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"getDataList()\" size=\"small\">查询</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table\n      :data=\"dataList\"\n      border\n      v-loading=\"dataListLoading\"\n      height=\"460\"\n      style=\"width: 100%;\"\n      size=\"small\">\n      <el-table-column\n        prop=\"logId\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"80\"\n        label=\"日志ID\">\n      </el-table-column>\n      <el-table-column\n        prop=\"jobId\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"80\"\n        label=\"任务ID\">\n      </el-table-column>\n      <el-table-column\n        prop=\"beanName\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"bean名称\">\n      </el-table-column>\n      <el-table-column\n        prop=\"methodName\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"方法名称\">\n      </el-table-column>\n      <el-table-column\n        prop=\"params\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"参数\">\n      </el-table-column>\n      <el-table-column\n        prop=\"status\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"状态\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.status === 0\" size=\"small\">成功</el-tag>\n          <el-tag v-else @click.native=\"showErrorInfo(scope.row.logId)\" size=\"small\" type=\"danger\" style=\"cursor: pointer;\">失败</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        prop=\"times\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"耗时(单位: 毫秒)\">\n      </el-table-column>\n      <el-table-column\n        prop=\"createTime\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"180\"\n        label=\"执行时间\">\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      @current-change=\"currentChangeHandle\"\n      :current-page=\"pageIndex\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"pageSize\"\n      :total=\"totalPage\"\n      layout=\"total, sizes, prev, pager, next, jumper\">\n    </el-pagination>\n  </el-dialog>\n</template>\n\n<script>\nimport { jobLogList, jobLogInfo } from \"@/api/sys\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      dataForm: {\n        id: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false\n    };\n  },\n  methods: {\n    init() {\n      this.visible = true;\n      this.getDataList();\n    },\n    // 获取数据列表\n    async getDataList() {\n      this.dataListLoading = true;\n      const params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        jobId: this.dataForm.id\n      };\n      const { data } = await jobLogList(params);\n      if (data && data.code === 0) {\n        this.dataList = data.page.list;\n        this.totalPage = data.page.totalCount;\n      } else {\n        this.dataList = [];\n        this.totalPage = 0;\n      }\n      this.dataListLoading = false;\n      // this.$http({\n      //   url: this.$http.adornUrl(\"/sys/scheduleLog/list\"),\n      //   method: \"get\",\n      //   params: this.$http.adornParams({\n      //     page: this.pageIndex,\n      //     limit: this.pageSize,\n      //     jobId: this.dataForm.id\n      //   })\n      // }).then(({ data }) => {\n      //   if (data && data.code === 0) {\n      //     this.dataList = data.page.list;\n      //     this.totalPage = data.page.totalCount;\n      //   } else {\n      //     this.dataList = [];\n      //     this.totalPage = 0;\n      //   }\n      //   this.dataListLoading = false;\n      // });\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 失败信息\n    async showErrorInfo(id) {\n      const { data } = await jobLogInfo(`/sys/scheduleLog/info/${id}`);\n      if (data && data.code === 0) {\n        this.$alert(data.log.error);\n      } else {\n        this.$message.error(data.msg);\n      }\n      // this.$http({\n      //   url: this.$http.adornUrl(`/sys/scheduleLog/info/${id}`),\n      //   method: \"get\",\n      //   params: this.$http.adornParams()\n      // }).then(({ data }) => {\n      //   if (data && data.code === 0) {\n      //     this.$alert(data.log.error);\n      //   } else {\n      //     this.$message.error(data.msg);\n      //   }\n      // });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views/sys/job/components"}]}