{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/menu/components/menu-add-or-update.vue?vue&type=template&id=4491b844&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/menu/components/menu-add-or-update.vue","mtime":1584947585007},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-dialog\",\n    {\n      attrs: {\n        title: !_vm.dataForm.id ? \"新增\" : \"修改\",\n        \"close-on-click-modal\": false,\n        visible: _vm.visible\n      },\n      on: {\n        \"update:visible\": function($event) {\n          _vm.visible = $event\n        }\n      }\n    },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"dataForm\",\n          attrs: {\n            model: _vm.dataForm,\n            rules: _vm.dataRule,\n            \"label-width\": \"80px\",\n            size: \"small\"\n          },\n          nativeOn: {\n            keyup: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.dataFormSubmit()\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"类型\", prop: \"type\" } },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  model: {\n                    value: _vm.dataForm.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.dataForm, \"type\", $$v)\n                    },\n                    expression: \"dataForm.type\"\n                  }\n                },\n                _vm._l(_vm.dataForm.typeList, function(type, index) {\n                  return _c(\n                    \"el-radio\",\n                    { key: index, attrs: { label: index } },\n                    [_vm._v(_vm._s(type))]\n                  )\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            {\n              attrs: {\n                label: _vm.dataForm.typeList[_vm.dataForm.type] + \"名称\",\n                prop: \"name\"\n              }\n            },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: _vm.dataForm.typeList[_vm.dataForm.type] + \"名称\"\n                },\n                model: {\n                  value: _vm.dataForm.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"name\", $$v)\n                  },\n                  expression: \"dataForm.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"上级菜单\", prop: \"parentName\" } },\n            [\n              _c(\n                \"el-popover\",\n                {\n                  ref: \"menuListPopover\",\n                  attrs: { placement: \"bottom-start\", trigger: \"click\" }\n                },\n                [\n                  _c(\"el-tree\", {\n                    ref: \"menuListTree\",\n                    attrs: {\n                      data: _vm.menuList,\n                      props: _vm.menuListTreeProps,\n                      \"node-key\": \"menuId\",\n                      \"default-expand-all\": false,\n                      \"highlight-current\": true,\n                      \"expand-on-click-node\": false\n                    },\n                    on: {\n                      \"current-change\": _vm.menuListTreeCurrentChangeHandle\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"el-input\", {\n                directives: [\n                  {\n                    name: \"popover\",\n                    rawName: \"v-popover:menuListPopover\",\n                    arg: \"menuListPopover\"\n                  }\n                ],\n                staticClass: \"menu-list__input\",\n                attrs: { readonly: true, placeholder: \"点击选择上级菜单\" },\n                model: {\n                  value: _vm.dataForm.parentName,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"parentName\", $$v)\n                  },\n                  expression: \"dataForm.parentName\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm.dataForm.type !== 2\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"菜单路由\", prop: \"url\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"菜单路由\" },\n                    model: {\n                      value: _vm.dataForm.url,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"url\", $$v)\n                      },\n                      expression: \"dataForm.url\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.dataForm.type !== 0\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"授权标识\", prop: \"perms\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      placeholder: \"多个用逗号分隔, 如: user:list,user:create\"\n                    },\n                    model: {\n                      value: _vm.dataForm.perms,\n                      callback: function($$v) {\n                        _vm.$set(_vm.dataForm, \"perms\", $$v)\n                      },\n                      expression: \"dataForm.perms\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"排序号\", prop: \"orderNum\" } },\n            [\n              _c(\"el-input-number\", {\n                attrs: {\n                  \"controls-position\": \"right\",\n                  min: 0,\n                  label: \"排序号\"\n                },\n                model: {\n                  value: _vm.dataForm.orderNum,\n                  callback: function($$v) {\n                    _vm.$set(_vm.dataForm, \"orderNum\", $$v)\n                  },\n                  expression: \"dataForm.orderNum\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm.dataForm.type !== 2\n            ? _c(\n                \"el-form-item\",\n                { attrs: { label: \"菜单图标\", prop: \"icon\" } },\n                [\n                  _c(\n                    \"el-row\",\n                    [\n                      _c(\n                        \"el-col\",\n                        { attrs: { span: 24 } },\n                        [\n                          _c(\n                            \"el-popover\",\n                            {\n                              ref: \"iconListPopover\",\n                              attrs: {\n                                placement: \"bottom-start\",\n                                trigger: \"click\",\n                                \"popper-class\": \"mod-menu__icon-popover\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"mod-menu__icon-list\" },\n                                _vm._l(_vm.iconList, function(item, index) {\n                                  return _c(\n                                    \"el-button\",\n                                    {\n                                      key: index,\n                                      class: {\n                                        \"is-active\": item === _vm.dataForm.icon\n                                      },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.iconActiveHandle(item)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"svg-icon\", {\n                                        attrs: { \"icon-class\": item }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                }),\n                                1\n                              )\n                            ]\n                          ),\n                          _c(\"el-input\", {\n                            directives: [\n                              {\n                                name: \"popover\",\n                                rawName: \"v-popover:iconListPopover\",\n                                arg: \"iconListPopover\"\n                              }\n                            ],\n                            staticClass: \"icon-list__input\",\n                            attrs: {\n                              readonly: true,\n                              placeholder: \"菜单图标名称\"\n                            },\n                            model: {\n                              value: _vm.dataForm.icon,\n                              callback: function($$v) {\n                                _vm.$set(_vm.dataForm, \"icon\", $$v)\n                              },\n                              expression: \"dataForm.icon\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"span\",\n        {\n          staticClass: \"dialog-footer\",\n          attrs: { slot: \"footer\" },\n          slot: \"footer\"\n        },\n        [\n          _c(\n            \"el-button\",\n            {\n              on: {\n                click: function($event) {\n                  _vm.visible = false\n                }\n              }\n            },\n            [_vm._v(\"取消\")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.dataFormSubmit()\n                }\n              }\n            },\n            [_vm._v(\"确定\")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}