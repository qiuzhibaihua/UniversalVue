{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/config/components/config-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/config/components/config-add-or-update.vue","mtime":1584947585004},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { configInfo, configDataFormSubmit } from \"@/api/sys\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      dataForm: {\n        id: 0,\n        paramKey: \"\",\n        paramValue: \"\",\n        remark: \"\"\n      },\n      dataRule: {\n        paramKey: [\n          { required: true, message: \"参数名不能为空\", trigger: \"blur\" }\n        ],\n        paramValue: [\n          { required: true, message: \"参数值不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || 0;\n      this.visible = true;\n      this.$nextTick(async () => {\n        this.$refs[\"dataForm\"].resetFields();\n        if (this.dataForm.id) {\n          const { data } = await configInfo(\n            `/sys/config/info/${this.dataForm.id}`\n          );\n          if (data && data.code === 0) {\n            this.dataForm.paramKey = data.config.paramKey;\n            this.dataForm.paramValue = data.config.paramValue;\n            this.dataForm.remark = data.config.remark;\n          }\n          // this.$http({\n          //   url: this.$http.adornUrl(`/sys/config/info/${this.dataForm.id}`),\n          //   method: \"get\",\n          //   params: this.$http.adornParams()\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.dataForm.paramKey = data.config.paramKey;\n          //     this.dataForm.paramValue = data.config.paramValue;\n          //     this.dataForm.remark = data.config.remark;\n          //   }\n          // });\n        }\n      });\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          const params = {\n            id: this.dataForm.id || undefined,\n            paramKey: this.dataForm.paramKey,\n            paramValue: this.dataForm.paramValue,\n            remark: this.dataForm.remark\n          };\n          const { data } = await configDataFormSubmit(\n            `/sys/config/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.visible = false;\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n\n          // this.$http({\n          //   url: this.$http.adornUrl(\n          //     `/sys/config/${!this.dataForm.id ? \"save\" : \"update\"}`\n          //   ),\n          //   method: \"post\",\n          //   data: this.$http.adornData({\n          //     id: this.dataForm.id || undefined,\n          //     paramKey: this.dataForm.paramKey,\n          //     paramValue: this.dataForm.paramValue,\n          //     remark: this.dataForm.remark\n          //   })\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.visible = false;\n          //         this.$emit(\"refreshDataList\");\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["config-add-or-update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"config-add-or-update.vue","sourceRoot":"src/views/sys/config/components","sourcesContent":["<template>\n  <el-dialog\n    :title=\"!dataForm.id ? '新增' : '修改'\"\n    :close-on-click-modal=\"false\"\n    :visible.sync=\"visible\">\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\" size=\"small\">\n      <el-form-item label=\"参数名\" prop=\"paramKey\">\n        <el-input v-model=\"dataForm.paramKey\" placeholder=\"参数名\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"参数值\" prop=\"paramValue\">\n        <el-input v-model=\"dataForm.paramValue\" placeholder=\"参数值\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"备注\" prop=\"remark\">\n        <el-input v-model=\"dataForm.remark\" placeholder=\"备注\"></el-input>\n      </el-form-item>\n    </el-form>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"visible = false\" size=\"small\">取消</el-button>\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\" size=\"small\">确定</el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { configInfo, configDataFormSubmit } from \"@/api/sys\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      dataForm: {\n        id: 0,\n        paramKey: \"\",\n        paramValue: \"\",\n        remark: \"\"\n      },\n      dataRule: {\n        paramKey: [\n          { required: true, message: \"参数名不能为空\", trigger: \"blur\" }\n        ],\n        paramValue: [\n          { required: true, message: \"参数值不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    init(id) {\n      this.dataForm.id = id || 0;\n      this.visible = true;\n      this.$nextTick(async () => {\n        this.$refs[\"dataForm\"].resetFields();\n        if (this.dataForm.id) {\n          const { data } = await configInfo(\n            `/sys/config/info/${this.dataForm.id}`\n          );\n          if (data && data.code === 0) {\n            this.dataForm.paramKey = data.config.paramKey;\n            this.dataForm.paramValue = data.config.paramValue;\n            this.dataForm.remark = data.config.remark;\n          }\n          // this.$http({\n          //   url: this.$http.adornUrl(`/sys/config/info/${this.dataForm.id}`),\n          //   method: \"get\",\n          //   params: this.$http.adornParams()\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.dataForm.paramKey = data.config.paramKey;\n          //     this.dataForm.paramValue = data.config.paramValue;\n          //     this.dataForm.remark = data.config.remark;\n          //   }\n          // });\n        }\n      });\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          const params = {\n            id: this.dataForm.id || undefined,\n            paramKey: this.dataForm.paramKey,\n            paramValue: this.dataForm.paramValue,\n            remark: this.dataForm.remark\n          };\n          const { data } = await configDataFormSubmit(\n            `/sys/config/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.visible = false;\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n\n          // this.$http({\n          //   url: this.$http.adornUrl(\n          //     `/sys/config/${!this.dataForm.id ? \"save\" : \"update\"}`\n          //   ),\n          //   method: \"post\",\n          //   data: this.$http.adornData({\n          //     id: this.dataForm.id || undefined,\n          //     paramKey: this.dataForm.paramKey,\n          //     paramValue: this.dataForm.paramValue,\n          //     remark: this.dataForm.remark\n          //   })\n          // }).then(({ data }) => {\n          //   if (data && data.code === 0) {\n          //     this.$message({\n          //       message: \"操作成功\",\n          //       type: \"success\",\n          //       duration: 1500,\n          //       onClose: () => {\n          //         this.visible = false;\n          //         this.$emit(\"refreshDataList\");\n          //       }\n          //     });\n          //   } else {\n          //     this.$message.error(data.msg);\n          //   }\n          // });\n        }\n      });\n    }\n  }\n};\n</script>\n"]}]}