{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/layout/components/TagsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/layout/components/TagsView.vue","mtime":1584947585002},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ScrollPane from \"@/components/ScrollPane\";\n// import { generateTitle } from '@/utils/i18n'\n// tagsView: {\n//   close: '关闭',\n//   closeOthers: '关闭其它',\n//   closeAll: '关闭所有'\n// }\nexport default {\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {}\n    };\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    }\n  },\n  watch: {\n    $route() {\n      this.addViewTags();\n      this.moveToCurrentTag();\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener(\"click\", this.closeMenu);\n      } else {\n        document.body.removeEventListener(\"click\", this.closeMenu);\n      }\n    }\n  },\n  mounted() {\n    this.addViewTags();\n  },\n  methods: {\n    //generateTitle, // generateTitle by vue-i18n\n    generateRoute() {\n      if (this.$route.name) {\n        return this.$route;\n      }\n      return false;\n    },\n    isActive(route) {\n      return route.path === this.$route.path;\n    },\n    addViewTags() {\n      const route = this.generateRoute();\n      if (!route) {\n        return false;\n      }\n      this.$store.dispatch(\"addVisitedViews\", route);\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag;\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag.$el);\n            break;\n          }\n        }\n      });\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch(\"delVisitedViews\", view).then(views => {\n        if (this.isActive(view)) {\n          const latestView = views.slice(-1)[0];\n          if (latestView) {\n            this.$router.push(latestView);\n          } else {\n            this.$router.push(\"/\");\n          }\n        }\n      });\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch(\"delOthersViews\", this.selectedTag).then(() => {\n        this.moveToCurrentTag();\n      });\n    },\n    closeAllTags() {\n      this.$store.dispatch(\"delAllViews\");\n      this.$router.push(\"/\");\n    },\n    openMenu(tag, e) {\n      this.visible = true;\n      this.selectedTag = tag;\n      this.left = e.clientX;\n      this.top = e.clientY;\n    },\n    closeMenu() {\n      this.visible = false;\n    }\n  }\n};\n",{"version":3,"sources":["TagsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"TagsView.vue","sourceRoot":"src/views/layout/components","sourcesContent":["<template>\n  <div class=\"tags-view-container\">\n    <scroll-pane class='tags-view-wrapper' ref='scrollPane'>\n      <router-link ref='tag' class=\"tags-view-item\" :class=\"isActive(tag)?'active':''\" v-for=\"tag in Array.from(visitedViews)\"\n        :to=\"tag\" :key=\"tag.path\" @contextmenu.prevent.native=\"openMenu(tag,$event)\">\n        {{tag.title}}\n        <span class='el-icon-close' @click.prevent.stop='closeSelectedTag(tag)'></span>\n      </router-link>\n    </scroll-pane>\n    <ul class='contextmenu' v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\">\n      <li @click=\"closeSelectedTag(selectedTag)\">关闭</li>\n      <li @click=\"closeOthersTags\">关闭其它</li>\n      <li @click=\"closeAllTags\">关闭所有</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport ScrollPane from \"@/components/ScrollPane\";\n// import { generateTitle } from '@/utils/i18n'\n// tagsView: {\n//   close: '关闭',\n//   closeOthers: '关闭其它',\n//   closeAll: '关闭所有'\n// }\nexport default {\n  components: { ScrollPane },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {}\n    };\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    }\n  },\n  watch: {\n    $route() {\n      this.addViewTags();\n      this.moveToCurrentTag();\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener(\"click\", this.closeMenu);\n      } else {\n        document.body.removeEventListener(\"click\", this.closeMenu);\n      }\n    }\n  },\n  mounted() {\n    this.addViewTags();\n  },\n  methods: {\n    //generateTitle, // generateTitle by vue-i18n\n    generateRoute() {\n      if (this.$route.name) {\n        return this.$route;\n      }\n      return false;\n    },\n    isActive(route) {\n      return route.path === this.$route.path;\n    },\n    addViewTags() {\n      const route = this.generateRoute();\n      if (!route) {\n        return false;\n      }\n      this.$store.dispatch(\"addVisitedViews\", route);\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag;\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag.$el);\n            break;\n          }\n        }\n      });\n    },\n    closeSelectedTag(view) {\n      this.$store.dispatch(\"delVisitedViews\", view).then(views => {\n        if (this.isActive(view)) {\n          const latestView = views.slice(-1)[0];\n          if (latestView) {\n            this.$router.push(latestView);\n          } else {\n            this.$router.push(\"/\");\n          }\n        }\n      });\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch(\"delOthersViews\", this.selectedTag).then(() => {\n        this.moveToCurrentTag();\n      });\n    },\n    closeAllTags() {\n      this.$store.dispatch(\"delAllViews\");\n      this.$router.push(\"/\");\n    },\n    openMenu(tag, e) {\n      this.visible = true;\n      this.selectedTag = tag;\n      this.left = e.clientX;\n      this.top = e.clientY;\n    },\n    closeMenu() {\n      this.visible = false;\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.tags-view-container {\n  .tags-view-wrapper {\n    background: #fff;\n    height: 34px;\n    border-bottom: 1px solid #d8dce5;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 0 3px 0 rgba(0, 0, 0, 0.04);\n    .tags-view-item {\n      display: inline-block;\n      position: relative;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #d8dce5;\n      color: #495060;\n      background: #fff;\n      padding: 0 8px;\n      font-size: 12px;\n      margin-left: 5px;\n      margin-top: 4px;\n      &:first-of-type {\n        margin-left: 15px;\n      }\n      &.active {\n        background-color: #42b983;\n        color: #fff;\n        border-color: #42b983;\n        &::before {\n          content: \"\";\n          background: #fff;\n          display: inline-block;\n          width: 8px;\n          height: 8px;\n          border-radius: 50%;\n          position: relative;\n          margin-right: 2px;\n        }\n      }\n    }\n  }\n  .contextmenu {\n    margin: 0;\n    background: #fff;\n    z-index: 100;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 12px;\n    font-weight: 400;\n    color: #333;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\n    li {\n      margin: 0;\n      padding: 7px 16px;\n      cursor: pointer;\n      &:hover {\n        background: #eee;\n      }\n    }\n  }\n}\n</style>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n//reset element css of el-icon-close\n.tags-view-wrapper {\n  .tags-view-item {\n    .el-icon-close {\n      width: 16px;\n      height: 16px;\n      vertical-align: 2px;\n      border-radius: 50%;\n      text-align: center;\n      transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n      transform-origin: 100% 50%;\n      &:before {\n        transform: scale(0.6);\n        display: inline-block;\n        vertical-align: -3px;\n      }\n      &:hover {\n        background-color: #b4bccc;\n        color: #fff;\n      }\n    }\n  }\n}\n</style>\n"]}]}