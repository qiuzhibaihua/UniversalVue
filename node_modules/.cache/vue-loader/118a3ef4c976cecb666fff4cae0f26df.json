{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/components/user-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/user/components/user-add-or-update.vue","mtime":1584947585011},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { isEmail, isMobile } from \"@/utils/validate\";\nimport { getRoleList, userDataFormSubmit, userUpdate } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\";\n// import \"@/styles/sideslip.scss\";\nexport default {\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"密码不能为空\"));\n      } else {\n        callback();\n      }\n    };\n    var validateComfirmPassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"确认密码不能为空\"));\n      } else if (this.dataForm.password !== value) {\n        callback(new Error(\"确认密码与密码输入不一致\"));\n      } else {\n        callback();\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (!isEmail(value)) {\n        callback(new Error(\"邮箱格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    var validateMobile = (rule, value, callback) => {\n      if (!isMobile(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      visible: false,\n      roleList: [],\n      dataForm: {\n        id: 0,\n        userName: \"\",\n        password: \"\",\n        comfirmPassword: \"\",\n        salt: \"\",\n        email: \"\",\n        mobile: \"\",\n        roleIdList: [],\n        isFreeze: 1\n      },\n      dataRule: {\n        userName: [\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" }\n        ],\n        password: [{ validator: validatePassword, trigger: \"blur\" }],\n        comfirmPassword: [\n          { validator: validateComfirmPassword, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"邮箱不能为空\", trigger: \"blur\" },\n          { validator: validateEmail, trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        roleIdList: [\n          { required: true, message: \"角色不能为空\", trigger: \"change\" }\n        ]\n      }\n    };\n  },\n  components: {\n    SidesLip\n  },\n  methods: {\n    async init(id) {\n      this.dataForm.id = id || 0;\n      const { data } = await getRoleList();\n      if(data && data.code === 0 && data.list && data.list.length >0){\n        this.roleList = data.list\n      }else{\n        this.$message.error(\"需先创立可用的角色\");\n        return '';\n      }\n      this.$refs.SidesLip.init(\n        this.dataForm.id ? \"修改\" : \"新增\",\n        \"700px\",\n        \"block\"\n      );\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n      });\n      if (this.dataForm.id) {\n        const { data } = await userUpdate(`/sys/user/info/${this.dataForm.id}`);\n        if (data && data.code === 0) {\n          this.dataForm.userName = data.user.username;\n          this.dataForm.salt = data.user.salt;\n          this.dataForm.email = data.user.email;\n          this.dataForm.mobile = data.user.mobile;\n          this.dataForm.roleIdList = data.user.roleIdList;\n          this.dataForm.isFreeze = Number.parseInt(data.user.isFreeze);\n        }\n      }\n    },\n    sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          const params = {\n            userId: this.dataForm.id || undefined,\n            username: this.dataForm.userName,\n            password: this.dataForm.password,\n            salt: this.dataForm.salt,\n            email: this.dataForm.email,\n            mobile: this.dataForm.mobile,\n            isFreeze: this.dataForm.isFreeze,\n            roleIdList: this.dataForm.roleIdList\n          };\n          const { data } = await userDataFormSubmit(\n            `/sys/user/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.loading = false;\n                this.sideClose();\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["user-add-or-update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"user-add-or-update.vue","sourceRoot":"src/views/sys/user/components","sourcesContent":["<template>\n  <sides-lip ref=\"SidesLip\">\n    <div slot=\"soltForm\">\n      <el-form\n        :model=\"dataForm\"\n        :rules=\"dataRule\"\n        ref=\"dataForm\"\n        @keyup.enter.native=\"dataFormSubmit()\"\n        label-width=\"80px\"\n        size=\"small\"\n      >\n        <el-form-item label=\"用户名\" prop=\"userName\">\n          <el-input v-model=\"dataForm.userName\" placeholder=\"登录帐号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\" :class=\"{ 'is-required': !dataForm.id }\">\n          <el-input v-model=\"dataForm.password\" type=\"password\" placeholder=\"密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"comfirmPassword\" :class=\"{ 'is-required': !dataForm.id }\">\n          <el-input v-model=\"dataForm.comfirmPassword\" type=\"password\" placeholder=\"确认密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"dataForm.email\" placeholder=\"邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"mobile\">\n          <el-input v-model=\"dataForm.mobile\" placeholder=\"手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色\" size=\"mini\" prop=\"roleIdList\">\n          <el-checkbox-group v-model=\"dataForm.roleIdList\">\n            <el-checkbox\n              v-for=\"role in roleList\"\n              :key=\"role.roleId\"\n              :label=\"role.roleId\"\n            >{{ role.roleName }}</el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"状态\" size=\"mini\" prop=\"isFreeze\">\n          <el-radio-group v-model=\"dataForm.isFreeze\">\n            <el-radio :label=\"1\">禁用</el-radio>\n            <el-radio :label=\"0\">正常</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div slot=\"soltFooter\">\n      <el-button @click=\"sideClose\">取消</el-button>\n      <el-button type=\"primary\" :loading=\"loading\" @click=\"dataFormSubmit()\">确定</el-button>\n    </div>\n  </sides-lip>\n</template>\n\n<script>\nimport { isEmail, isMobile } from \"@/utils/validate\";\nimport { getRoleList, userDataFormSubmit, userUpdate } from \"@/api/sys\";\nimport SidesLip from \"@/components/SidesLip\";\n// import \"@/styles/sideslip.scss\";\nexport default {\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"密码不能为空\"));\n      } else {\n        callback();\n      }\n    };\n    var validateComfirmPassword = (rule, value, callback) => {\n      if (!this.dataForm.id && !/\\S/.test(value)) {\n        callback(new Error(\"确认密码不能为空\"));\n      } else if (this.dataForm.password !== value) {\n        callback(new Error(\"确认密码与密码输入不一致\"));\n      } else {\n        callback();\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (!isEmail(value)) {\n        callback(new Error(\"邮箱格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    var validateMobile = (rule, value, callback) => {\n      if (!isMobile(value)) {\n        callback(new Error(\"手机号格式错误\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      visible: false,\n      roleList: [],\n      dataForm: {\n        id: 0,\n        userName: \"\",\n        password: \"\",\n        comfirmPassword: \"\",\n        salt: \"\",\n        email: \"\",\n        mobile: \"\",\n        roleIdList: [],\n        isFreeze: 1\n      },\n      dataRule: {\n        userName: [\n          { required: true, message: \"用户名不能为空\", trigger: \"blur\" }\n        ],\n        password: [{ validator: validatePassword, trigger: \"blur\" }],\n        comfirmPassword: [\n          { validator: validateComfirmPassword, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"邮箱不能为空\", trigger: \"blur\" },\n          { validator: validateEmail, trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        roleIdList: [\n          { required: true, message: \"角色不能为空\", trigger: \"change\" }\n        ]\n      }\n    };\n  },\n  components: {\n    SidesLip\n  },\n  methods: {\n    async init(id) {\n      this.dataForm.id = id || 0;\n      const { data } = await getRoleList();\n      if(data && data.code === 0 && data.list && data.list.length >0){\n        this.roleList = data.list\n      }else{\n        this.$message.error(\"需先创立可用的角色\");\n        return '';\n      }\n      this.$refs.SidesLip.init(\n        this.dataForm.id ? \"修改\" : \"新增\",\n        \"700px\",\n        \"block\"\n      );\n      this.$nextTick(() => {\n        this.$refs[\"dataForm\"].resetFields();\n      });\n      if (this.dataForm.id) {\n        const { data } = await userUpdate(`/sys/user/info/${this.dataForm.id}`);\n        if (data && data.code === 0) {\n          this.dataForm.userName = data.user.username;\n          this.dataForm.salt = data.user.salt;\n          this.dataForm.email = data.user.email;\n          this.dataForm.mobile = data.user.mobile;\n          this.dataForm.roleIdList = data.user.roleIdList;\n          this.dataForm.isFreeze = Number.parseInt(data.user.isFreeze);\n        }\n      }\n    },\n    sideClose() {\n      this.$refs.SidesLip.sideClose();\n    },\n    // 表单提交\n    dataFormSubmit() {\n      this.$refs[\"dataForm\"].validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          const params = {\n            userId: this.dataForm.id || undefined,\n            username: this.dataForm.userName,\n            password: this.dataForm.password,\n            salt: this.dataForm.salt,\n            email: this.dataForm.email,\n            mobile: this.dataForm.mobile,\n            isFreeze: this.dataForm.isFreeze,\n            roleIdList: this.dataForm.roleIdList\n          };\n          const { data } = await userDataFormSubmit(\n            `/sys/user/${!this.dataForm.id ? \"save\" : \"update\"}`,\n            params\n          );\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.loading = false;\n                this.sideClose();\n                this.$emit(\"refreshDataList\");\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};\n</script>\n\n\n"]}]}