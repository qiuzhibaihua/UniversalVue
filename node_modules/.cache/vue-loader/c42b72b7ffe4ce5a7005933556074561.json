{"remainingRequest":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/config/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/src/views/sys/config/index.vue","mtime":1584947585004},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robert/project/vue/UniversalVue/UniversalVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AddOrUpdate from \"./components/config-add-or-update\";\nimport { configList, configDelete } from \"@/api/sys\";\nnew Vue({\n\n})\nexport default {\n  data() {\n    return {\n      dataForm: {\n        paramKey: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: false\n    };\n  },\n  components: {\n    AddOrUpdate\n  },\n  mounted() {\n    this.getDataList();\n  },\n  methods: {\n     // 查询清空\n    reset(dataForm) {\n      // this.$refs[dataForm].resetFields();\n      this.dataForm.paramKey=\"\";\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 获取数据列表\n    async getDataList() {\n      this.dataListLoading = true;\n      const params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        paramKey: this.dataForm.paramKey\n      };\n      const { data } = await configList(params);\n      if (data && data.code === 0) {\n        this.dataList = data.page.list;\n        this.totalPage = data.page.totalCount;\n      } else {\n        this.dataList = [];\n        this.totalPage = 0;\n      }\n      this.dataListLoading = false;\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.addOrUpdateVisible = true;\n      this.$nextTick(() => {\n        this.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.id;\n          });\n      this.$confirm(\n        `确定进行[${id ? \"删除\" : \"批量删除\"}]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await configDelete(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n          //   this.$http({\n          //     url: this.$http.adornUrl(\"/sys/config/delete\"),\n          //     method: \"post\",\n          //     data: this.$http.adornData(ids, false)\n          //   }).then(({ data }) => {\n          //     if (data && data.code === 0) {\n          //       this.$message({\n          //         message: \"操作成功\",\n          //         type: \"success\",\n          //         duration: 1500,\n          //         onClose: () => {\n          //           this.getDataList();\n          //         }\n          //       });\n          //     } else {\n          //       this.$message.error(data.msg);\n          //     }\n          //   });\n        })\n        .catch(() => {});\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/sys/config","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\" size=\"small\">\n      <el-form-item>\n        <el-input v-model=\"dataForm.paramKey\" placeholder=\"参数名\" clearable></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click=\"getDataList()\" size=\"small\">查询</el-button>\n        <el-button @click=\"reset('dataForm')\" size=\"small\">清空</el-button>\n        <el-button type=\"primary\" @click=\"addOrUpdateHandle()\" size=\"small\">新增</el-button>\n        <el-button type=\"danger\" @click=\"deleteHandle()\" :disabled=\"dataListSelections.length <= 0\" size=\"small\">批量删除</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table\n      :data=\"dataList\"\n      border\n      v-loading=\"dataListLoading\"\n      @selection-change=\"selectionChangeHandle\"\n      size=\"small\"\n      style=\"width: 100%;\">\n      <el-table-column\n        type=\"selection\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"50\">\n      </el-table-column>\n      <el-table-column\n        prop=\"paramKey\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"参数名\">\n      </el-table-column>\n      <el-table-column\n        prop=\"paramValue\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"参数值\">\n      </el-table-column>\n      <el-table-column\n        prop=\"remark\"\n        header-align=\"center\"\n        align=\"center\"\n        label=\"备注\">\n      </el-table-column>\n      <el-table-column\n        fixed=\"right\"\n        header-align=\"center\"\n        align=\"center\"\n        width=\"150\"\n        label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button v-if=\"isAuth('sys:config:info')\" type=\"text\" size=\"small\" @click=\"addOrUpdateHandle(scope.row.id)\">修改</el-button>\n          <el-button v-if=\"isAuth('sys:config:delete')\" type=\"text\" size=\"small\" @click=\"deleteHandle(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      @current-change=\"currentChangeHandle\"\n      :current-page=\"pageIndex\"\n      :page-sizes=\"[10, 20, 50, 100]\"\n      :page-size=\"pageSize\"\n      :total=\"totalPage\"\n      layout=\"total, sizes, prev, pager, next, jumper\">\n    </el-pagination>\n    <!-- 弹窗, 新增 / 修改 -->\n    <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"getDataList\"></add-or-update>\n  </div>\n</template>\n\n<script>\nimport AddOrUpdate from \"./components/config-add-or-update\";\nimport { configList, configDelete } from \"@/api/sys\";\nnew Vue({\n\n})\nexport default {\n  data() {\n    return {\n      dataForm: {\n        paramKey: \"\"\n      },\n      dataList: [],\n      pageIndex: 1,\n      pageSize: 10,\n      totalPage: 0,\n      dataListLoading: false,\n      dataListSelections: [],\n      addOrUpdateVisible: false\n    };\n  },\n  components: {\n    AddOrUpdate\n  },\n  mounted() {\n    this.getDataList();\n  },\n  methods: {\n     // 查询清空\n    reset(dataForm) {\n      // this.$refs[dataForm].resetFields();\n      this.dataForm.paramKey=\"\";\n      this.restPage();\n    },\n    // 跳到第一页进行查询\n    restPage() {\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 获取数据列表\n    async getDataList() {\n      this.dataListLoading = true;\n      const params = {\n        page: this.pageIndex,\n        limit: this.pageSize,\n        paramKey: this.dataForm.paramKey\n      };\n      const { data } = await configList(params);\n      if (data && data.code === 0) {\n        this.dataList = data.page.list;\n        this.totalPage = data.page.totalCount;\n      } else {\n        this.dataList = [];\n        this.totalPage = 0;\n      }\n      this.dataListLoading = false;\n    },\n    // 每页数\n    sizeChangeHandle(val) {\n      this.pageSize = val;\n      this.pageIndex = 1;\n      this.getDataList();\n    },\n    // 当前页\n    currentChangeHandle(val) {\n      this.pageIndex = val;\n      this.getDataList();\n    },\n    // 多选\n    selectionChangeHandle(val) {\n      this.dataListSelections = val;\n    },\n    // 新增 / 修改\n    addOrUpdateHandle(id) {\n      this.addOrUpdateVisible = true;\n      this.$nextTick(() => {\n        this.$refs.addOrUpdate.init(id);\n      });\n    },\n    // 删除\n    deleteHandle(id) {\n      var ids = id\n        ? [id]\n        : this.dataListSelections.map(item => {\n            return item.id;\n          });\n      this.$confirm(\n        `确定进行[${id ? \"删除\" : \"批量删除\"}]操作?`,\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(async () => {\n          const { data } = await configDelete(ids);\n          if (data && data.code === 0) {\n            this.$message({\n              message: \"操作成功\",\n              type: \"success\",\n              duration: 1500,\n              onClose: () => {\n                this.getDataList();\n              }\n            });\n          } else {\n            this.$message.error(data.msg);\n          }\n          //   this.$http({\n          //     url: this.$http.adornUrl(\"/sys/config/delete\"),\n          //     method: \"post\",\n          //     data: this.$http.adornData(ids, false)\n          //   }).then(({ data }) => {\n          //     if (data && data.code === 0) {\n          //       this.$message({\n          //         message: \"操作成功\",\n          //         type: \"success\",\n          //         duration: 1500,\n          //         onClose: () => {\n          //           this.getDataList();\n          //         }\n          //       });\n          //     } else {\n          //       this.$message.error(data.msg);\n          //     }\n          //   });\n        })\n        .catch(() => {});\n    }\n  }\n};\n</script>\n"]}]}